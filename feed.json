{"title":"欢迎来到匡盟盟的博客！","description":"Mengmeng Kuang's Blog!","language":"zh-CN","link":"http://meng.uno","pubDate":"Thu, 01 Mar 2018 15:25:33 GMT","lastBuildDate":"Fri, 02 Mar 2018 12:14:35 GMT","generator":"hexo-generator-json-feed","webMaster":"匡盟盟","items":[{"title":"Eclipse的阿里巴巴代码规范配置","link":"http://meng.uno/articles/6e79ab7a/","description":"插件安装 环境：JDK1.8，Eclipse4+。有同学遇到过这样的情况，安装插件重启后，发现没有对应的菜单项，从日志上也看不到相关的异常信息，最后把JDK从1.6升级到1.8解决问题。 Help -> Install New Software… 输入Update Site地址：https://p3c.alibaba.com/plugin/eclipse/update 回车，然后勾选Ali-CodeAnalysis，再一直点Next Next…按提示走下去就好。 然后就是提示重启了，安装完毕。 注意：有同学反映插件扫描会触发很多 “JPA Java Change Event Ha","pubDate":"Thu, 01 Mar 2018 15:25:33 GMT","guid":"http://meng.uno/articles/6e79ab7a/","category":"Java开发Tips,代码规范"},{"title":"Eclipse的Google样式Java代码自动规范配置","link":"http://meng.uno/articles/548d5dfd/","description":"不知道大家在用Eclipse的时候有没有感觉到，当代码量一大就看不懂自己代码了呢？有人可能要说了，eclipse不是自己带有格式化代码工具吗？确实如此，但是我们可能想使用更高级的自动化工具，例如Google—Java-Style。这篇博文，我将展示如何使用eclipse自带的自动化代码规范工具，以及怎么配置Google-Java-Style。 准备 文件下载： * Eclipse: 进入官网 * Google Java Format File: 点击下载 使用Eclipse自带 * 快捷键： Ctrl/Command + Shift + F * 鼠标： * 单个文件：进入文件/","pubDate":"Thu, 01 Mar 2018 12:59:33 GMT","guid":"http://meng.uno/articles/548d5dfd/","category":"Java开发Tips,代码规范"},{"title":"What are Human Genome Project and ENCODE Project?","link":"http://meng.uno/articles/32469d52/","description":"Human Genome Project The Profile of the Project 人类基因组计划(Human Genome Project,简称HGP)是由美国科学家于1985年率先提出，又于1990年正式启动的。来自美国、英国、法国、德国、日本和中国科学家共同参与了这一预算达30亿美元的人类基因组计划。按照这个计划的设想，在2005年，要把人体内约10万个基因的密码全部解开，同时绘制出人类基因的谱图。换句话说，就是要揭开组成人体4万个基因的30亿个碱基对的秘密。 这一计划的最终目的是测定人类基因组30亿个基本化学组成（称为碱基对或核苷酸），进而揭开与人类的生老病死有关的数万个","pubDate":"Sun, 18 Feb 2018 11:54:31 GMT","guid":"http://meng.uno/articles/32469d52/","category":"生物信息"},{"title":"关于比特币（Bitcoin）","link":"http://meng.uno/articles/7bfe1542/","description":"比特币术语 比特币 首字母大写的Bitcoin用来表示比特币的概念或整个比特币网络本身。例如：“今天我学了些有关Bitcoin协议的内容。” 而没有大写的bitcoin则表示一个记账单位。例如：“我今天转出了10个bitcoin。”该单位通常也简写为BTC或XBT。 比特币地址 比特币地址就像一个物理地址或者电子邮件地址。这是别人付给你比特币时你唯一需要提供的信息。然而一个重要的区别是，每个地址应该只用于单笔交易。 对等式网络 对等式网络是指，通过允许单个节点与其他节点直接交互，从而实现整个系统像有组织的集体一样运作的系统 。对于比特币来说，比特币网络以这样一种方式构建——每个用户都在传","pubDate":"Wed, 14 Feb 2018 11:47:44 GMT","guid":"http://meng.uno/articles/7bfe1542/","category":"比特币,Bitcoin"},{"title":"简单的Python3爬虫","link":"http://meng.uno/articles/51d32f19/","description":"我们先从分析原理入手，然后再使用Python提供的基本的库urllib。 注意，我全程使用的是Python3，如果你必须使用不同版本，请自行百度某些库及函数的转换，需要使用的库不一定你的电脑上预装了，所以请自行百度安装。 原理 网络爬虫，也叫网络蜘蛛(Web Spider)，如果把互联网比喻成一个蜘蛛网，Spider就是一只在网上爬来爬去的蜘蛛。网络爬虫就是根据网页的地址来寻找网页的，也就是URL。 URL URL就是统一资源定位符(Uniform Resource Locator)，它的一般格式如下(带方括号[]的为可选项)： protocol ://hostname[:port]/","pubDate":"Mon, 12 Feb 2018 12:18:15 GMT","guid":"http://meng.uno/articles/51d32f19/","category":"Python,爬虫"},{"title":"CPAchecker","link":"http://meng.uno/articles/c5d9877c/","description":"CPAchecker is a tool for configurable software verification which means expressing different program analysis and model checking approaches in one single formalism. The main algorithm is configurable to perform a reachability analysis on arbitrary combinations of existing configurable program analys","pubDate":"Sun, 11 Feb 2018 14:08:59 GMT","guid":"http://meng.uno/articles/c5d9877c/","category":"Software Verification,CPA,CPAchecker"},{"title":"Linux Test Project","link":"http://meng.uno/articles/bfb74f68/","description":"I found this project from the references of other papers, and I thought it was good, so I plan to run it. As we can see from its name, Linux Test Project (LTP) has a goal to deliver test suites to the open source community that validate the reliability, robustness, and stability of Linux. This proje","pubDate":"Sun, 11 Feb 2018 13:29:33 GMT","guid":"http://meng.uno/articles/bfb74f68/","category":"Linux,Linux Test"},{"title":"A Melody Composer for both Tonal and Non-Tonal Languages","link":"http://meng.uno/articles/2251dcee/","description":"Summary Abstract This paper contains some improvements on an algorithmic melody composer called “T-music”. “T-music” is an algorithm which can compose a melody for users’ input lyrics by mining the relationship between the melodies and lyrics. These relationships are known as frequent patterns (FPS)","pubDate":"Sun, 11 Feb 2018 04:03:24 GMT","guid":"http://meng.uno/articles/2251dcee/","category":"Paper Report,Data mining"},{"title":".length与length()的区别","link":"http://meng.uno/articles/61c2f1f1/","description":"当我们需要使用数组或者字符串长度时，习惯了使用IDE自动补全的我们是否知道.length与length()的区别喻原因呢？ 上面问题的答案是： * 数组使用.length属性 * 字符串使用length()方法 下面我来回答原因。 为什么数组有.length属性？ 在Java中，数组是容器对象，其中包含了固定数量的同一类型的值，一旦数组创建，其长度就是固定的了，于是，其长度可以作为一个属性。 为什么字符串需要length()方法？ Java中的String，实际上是一个char类型数组，而char[]已经有了.length属性，所以在实现String时就没必要再定义重复的属性了，","pubDate":"Sat, 10 Feb 2018 13:58:04 GMT","guid":"http://meng.uno/articles/61c2f1f1/","category":"Java开发Tips,String,Object"},{"title":"Java异常结构层次图","link":"http://meng.uno/articles/1164dab2/","description":"在Java中，异常分为checked与unchecked，他们都在一个分类层次中，如下图。 其中，红色的异常是checked异常，意味着在一个方法中，他们throw后必须catch或者declare。 另一种颜色的为unchecked异常，他们的异常不需要被recover。 本文链接： http://meng.uno/articles/1164dab2/ 欢迎转载！","pubDate":"Fri, 09 Feb 2018 14:11:15 GMT","guid":"http://meng.uno/articles/1164dab2/","category":"Java开发Tips,Exception"},{"title":"二分查找的效率","link":"http://meng.uno/articles/fff444e8/","description":"查找是比较常见的工作，今天我通过对比几种在数组中查找一个确定的值的例子来向大家展示二分查找的魅力。 数组查找元素的几种方法 使用List 1 2 3 public static boolean useList(String[] arr, String targetValue) { return Arrays.asList(arr).contains(targetValue); } 使用Set 1 2 3 4 public static boolean useSet(String[] arr, String targetValue) { Set set = ne","pubDate":"Thu, 08 Feb 2018 09:20:00 GMT","guid":"http://meng.uno/articles/fff444e8/","category":"Java开发Tips,Search"},{"title":"Java Substring() 的实现","link":"http://meng.uno/articles/f3057e6c/","description":"写过Java的人应该都用过substring(int bedinIndex, int endIndex)方法。我发现这个简单的方法在实现上居然经过了一次大的变革。 substring()的用途 代码: 1 2 3 String origin = \"asdfg\"; origin = origin.substring(1,3); System.out.println(origin); 输出: 1 sd 我们发现它能将原始字符串中从下标为beginIndex到endIndex-1之间的子串取出。那它是怎么实现的呢？ substring()的实现 Java中的字符串有三个域：","pubDate":"Thu, 08 Feb 2018 07:43:08 GMT","guid":"http://meng.uno/articles/f3057e6c/","category":"Java开发Tips"},{"title":"Java异常处理","link":"http://meng.uno/articles/7526d370/","description":"在Java中，调用某方法，就必须处理被调用方法抛出的异常，同时超类也可以用来捕获或者处理子类异常。 调用方法必须处理被调用方法抛出的异常 下面是一个处理异常的程序。我们可以测试一下，如果在一个方法中抛出一个异常，不仅是该方法，而且所有调用该方法的方法都必须声明或抛出异常。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class exceptionTest { private static Exception exception; public static void main(String[] args) throws Ex","pubDate":"Thu, 01 Feb 2018 14:21:52 GMT","guid":"http://meng.uno/articles/7526d370/","category":"Java开发Tips,Exception"},{"title":"Analysis For Hyperkernel","link":"http://meng.uno/articles/55c9299d/","description":"Homepage: https://locore.cs.washington.edu/hyperkernel/ Code: https://github.com/locore/hv6 State-machine Specification State-machine specification means the system function will first verify the old procedure until the procedure is runnable and then return a new procedure and write to the system i","pubDate":"Mon, 29 Jan 2018 13:43:03 GMT","guid":"http://meng.uno/articles/55c9299d/","category":"操作系统,系统验证"},{"title":"怎么处理噪声","link":"http://meng.uno/articles/a12d1477/","description":"处理噪声是一个在机器学习学习过程中，总会被问到的问题。噪声可以出现在输入X，亦可以出现在输出Y中。 X中缺失值 1. 使用来自所有可用数据的特征的平均值 2. 忽略实例 3. 使用来自类似项目的平均值 4. 使用另一个机器学习算法来预测值 * Bagging 或者 Boosting 本文链接： http://meng.uno/articles/a12d1477/ 欢迎转载！","pubDate":"Sat, 27 Jan 2018 14:35:33 GMT","guid":"http://meng.uno/articles/a12d1477/","category":"AI,机器学习"},{"title":"Analysis for Yggdrasil","link":"http://meng.uno/articles/5ed9f695/","description":"Yggdrasil is a toolkit for verifying file system with push-button verification via crash refinement. As for push-button verification, it means that Yggdrasil needs no manual annotations or proofs. As for crash refinement, it is amenable to fully automated SMT reasoning. The whole verification is som","pubDate":"Tue, 16 Jan 2018 14:31:00 GMT","guid":"http://meng.uno/articles/5ed9f695/","category":"System Verification,Yggdrasil"},{"title":"KVM Unit Tests","link":"http://meng.uno/articles/50351d5d/","description":"Kernel-based Virtual Machine (KVM) is a virtualization infrastructure for the Linux kernel that turns it into a hypervisor. KVM requires a processor with hardware virtualization extensions. This project, as its name suggests, is to provide unit tests for KVM. The unit tests are tiny guest operating","pubDate":"Mon, 15 Jan 2018 14:19:40 GMT","guid":"http://meng.uno/articles/50351d5d/","category":"KVM"},{"title":"Analysis for DynamoRIO","link":"http://meng.uno/articles/a331aaad/","description":"DynamoRIO is a dynamic binary piling/translation platform. Through it, you can manipulate the running code of a program, that is, it can simulate running a program and allow you to transform and control any place of the running code. It is used for dynamic analysis, optimization and translation of p","pubDate":"Sat, 13 Jan 2018 13:57:16 GMT","guid":"http://meng.uno/articles/a331aaad/","category":"RIO,DynamoRIO"},{"title":"Zsh","link":"http://meng.uno/articles/d911b12b/","description":"不少程序员都觉得Mac的一大优势就是其Shell，也有很多人觉得Mac与Linux在Shell上很相似。不错，但是Mac还是略胜一筹或者说高一个量级。今天，我将向大家介绍一个Mac特有的Shell（Linux也可以安装，但是不是系统自带。）—— Zsh。 切换到Zsh 使用cat /etc/shells指令，我们可以看看自己的系统有哪些Shells，下面是我的Mac的结果： 1 2 3 4 5 6 7 /bin/bash /bin/csh /bin/ksh /bin/sh /bin/tcsh /bin/zsh /usr/local/bin/fish 使用这个指令切换到Zsh：chs","pubDate":"Thu, 11 Jan 2018 02:22:44 GMT","guid":"http://meng.uno/articles/d911b12b/","category":"Shells"},{"title":"Deep Learning上手工具","link":"http://meng.uno/articles/99be2c50/","description":"现在Deep Learning太火了，以至于没有任何计算机基础的人都想使用它，那么对于新手，甚至连Python代码都写不好的DL爱好者，有什么上手工具么？选择合适的工具可以帮助学习更快，很巧的是，有很多不同的工具可供选择，下图列出了常用的工具。 谷歌开发的Tensorflow，微软的CNTK以及Theano都是为深度学习而开发的库，它们促进了使用GPU计算。他们并不难，但与Keras相比，他们仍然非常复杂。Keras只是使用底层深度学习库的界面。使用Keras就像玩乐高一样简单。我建议初学者从Keras开始，因为我们可以快速了解深度学习可以做些什么，并积极进行一些有趣的项目。 本文","pubDate":"Wed, 10 Jan 2018 14:43:43 GMT","guid":"http://meng.uno/articles/99be2c50/","category":"AI,Deep Learning"},{"title":"CryptoMinisat","link":"http://meng.uno/articles/7d26fe8/","description":"Inspired by other verification system projects, I want to further explore the means of verification they used such as SMT solver, SAT solver, Coq and so on. I’ll start with this report from an advanced SAT solver — CryptoMinisat. (I have written a report about STP which is a SMT solver.) The Boolea","pubDate":"Wed, 10 Jan 2018 13:50:36 GMT","guid":"http://meng.uno/articles/7d26fe8/","category":"solver,SAT"},{"title":"Trinity","link":"http://meng.uno/articles/664baed9/","description":"As we all known, system call testing is very important to a system. System call fuzzers aren’t a particularly new idea. A few projects began from the mid-2000s with the aim of bringing more sophistication to the fuzz-testing process. One of them, Scrashme, was started in 2006. Work on that project l","pubDate":"Fri, 05 Jan 2018 14:37:53 GMT","guid":"http://meng.uno/articles/664baed9/","category":"Fuzzer"},{"title":"Boogie","link":"http://meng.uno/articles/4f0a9591/","description":"Boogie is an intermediate verification language (IVL), intended as a layer on which to build program verifiers for other languages. It is also the name of the verification tool that takes Boogie programs as input. It can accept the input of a Boogie program and generate verification conditions that","pubDate":"Wed, 03 Jan 2018 14:43:12 GMT","guid":"http://meng.uno/articles/4f0a9591/","category":"Language"},{"title":"Simple Theorem Prover SMT solver","link":"http://meng.uno/articles/cd3afb7d/","description":"I found it could be generated as program analysis tools, theorem provers, automated bug finders and so on which means it is a very crucial research. STP is a constraint solver aimed at solving constraints of bit vectors and arrays. It can read CVC, SMT-LIB1 and SMT-LIB2 formats files. It also could","pubDate":"Wed, 03 Jan 2018 13:42:58 GMT","guid":"http://meng.uno/articles/cd3afb7d/","category":"solver,SMT"},{"title":"跨领域分词国内外研究现状","link":"http://meng.uno/articles/e38d3f1c/","description":"国内研究 国内研究中文分词的科研单位主要有：中科院、清华、北大、北京语言学院、东北大学、MSRA、IBM研究院以及哈工大等。 国内主要的成熟的分词系统：ICTCLAS（汉语词法分析系统）、海量信息、盘古分词、结巴分词、BosonNLP以及**哈工大语言云（LTP-Cloud）**等。 国内在中文分词算法的研究上进展颇丰，参与的科研机构也比较多，使用的方法也比较杂乱，从[1]—[19]可以看出。国内分词算法上的进展主要有：2005年，哈工大[13]在分词阶段以基于词的n-gram方法为核心。先将词按照词典初步切分，并从训练语料统计得到3-gram信息，动态规划计算哪条切分路径最优。但在命名实","pubDate":"Fri, 22 Dec 2017 12:15:00 GMT","guid":"http://meng.uno/articles/e38d3f1c/","category":"毕设,研究现状"}]}