<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎来到匡盟盟的博客！</title>
  
  <subtitle>Colyn 崛起正当时！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://meng.uno/"/>
  <updated>2018-02-09T10:46:20.918Z</updated>
  <id>http://meng.uno/</id>
  
  <author>
    <name>匡盟盟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二分查找的效率</title>
    <link href="http://meng.uno/posts/fff444e8/"/>
    <id>http://meng.uno/posts/fff444e8/</id>
    <published>2018-02-08T09:20:00.000Z</published>
    <updated>2018-02-09T10:46:20.918Z</updated>
    
    <content type="html"><![CDATA[<p>本文链接: <a href="http://meng.uno/posts/fff444e8/">http://meng.uno/posts/fff444e8/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文链接: &lt;a href=&quot;http://meng.uno/posts/fff444e8/&quot;&gt;http://meng.uno/posts/fff444e8/&lt;/a&gt; 欢迎转载！&lt;/p&gt;
      
    
    </summary>
    
      <category term="Java开发Tips" scheme="http://meng.uno/categories/Java%E5%BC%80%E5%8F%91Tips/"/>
    
    
      <category term="算法复杂性" scheme="http://meng.uno/tags/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E6%80%A7/"/>
    
      <category term="Java" scheme="http://meng.uno/tags/Java/"/>
    
      <category term="二分查找" scheme="http://meng.uno/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>Java Substring() 的实现</title>
    <link href="http://meng.uno/posts/f3057e6c/"/>
    <id>http://meng.uno/posts/f3057e6c/</id>
    <published>2018-02-08T07:43:08.000Z</published>
    <updated>2018-02-09T10:46:20.937Z</updated>
    
    <content type="html"><![CDATA[<p>写过Java的人应该都用过<code>substring(int bedinIndex, int endIndex)</code>方法。我发现这个简单的方法在实现上居然经过了一次大的变革。</p><h2 id="substring-的用途"><a class="header-anchor" href="#substring-的用途">🌊</a>substring()的用途</h2><p>代码:</p><figure class="highlight">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line">String origin = "asdfg"; </span><br><span class="line">origin = origin.substring(1,3);</span><br><span class="line">System.out.println(origin);</span><br></pre>      </td>    </tr>  </table></figure><p>输出:</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">sd</span><br></pre>      </td>    </tr>  </table></figure><p>我们发现它能将原始字符串中从下标为beginIndex到endIndex-1之间的子串取出。那它是怎么实现的呢？</p><h2 id="substring-的实现"><a class="header-anchor" href="#substring-的实现">🌊</a>substring()的实现</h2><blockquote>  <p>Java中的字符串有三个域：char value[], int offset以及int count，它们分别存储字符串的值，起始下标与长度。</p></blockquote><h3 id="jdk6版本"><a class="header-anchor" href="#jdk6版本">🌊</a>JDK6版本</h3><p>在这个版本中，每次执行substring()方法时并不会新建新的string，仅仅只是将上述三个域中的offset，count做必要的修改。返回对象仍指向原来的数据。</p><p><img src="http://www.meng.uno/images/substring_jdk.png" alt="Substring()实现版本一"></p><p>这样一来，<strong><em>缺点</em></strong>就比较明显：当原始字符串比较长，而截取的子串比较短时，在后续的使用中就会浪费大量的空间。</p><h3 id="jdk7-版本"><a class="header-anchor" href="#jdk7-版本">🌊</a>JDK7+版本</h3><p>在上一个版本基础上，这个方法进行了改进，每次使用这个方法都会新建一个string对象，并将其返回。</p><p><img src="http://www.meng.uno/images/substring_jdk7.png" alt="Substring()实现版本二"></p><p>本文链接: <a href="http://meng.uno/posts/f3057e6c/">http://meng.uno/posts/f3057e6c/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写过Java的人应该都用过&lt;code&gt;substring(int bedinIndex, int endIndex)&lt;/code&gt;方法。我发现这个简单的方法在实现上居然经过了一次大的变革。&lt;/p&gt;
&lt;h2 id=&quot;substring-的用途&quot;&gt;&lt;a class=&quot;heade
      
    
    </summary>
    
      <category term="Java开发Tips" scheme="http://meng.uno/categories/Java%E5%BC%80%E5%8F%91Tips/"/>
    
    
      <category term="Java" scheme="http://meng.uno/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Analysis For Hyperkernel</title>
    <link href="http://meng.uno/posts/55c9299d/"/>
    <id>http://meng.uno/posts/55c9299d/</id>
    <published>2018-01-29T13:43:03.000Z</published>
    <updated>2018-02-09T10:46:20.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="state-machine-specification"><a class="header-anchor" href="#state-machine-specification">🌊</a>State-machine Specification</h2><p>State-machine specification means the system function will first verify the old procedure until the procedure is runnable and then return a new procedure and write to the system image. All of these must run in the user level. This specification consists  of two parts: a definition of abstract kernel state, and a definition of trap handlers (e.g., system calls) in terms of abstract state transitions. They use fully automated technique to find bugs and this method is full functional verification if program  is free of loops and state is finite.</p><p>The “hv6/hv6/spec/kernel/spec/specs.py” file contains the system calls which use this kind of specification. From the picture, we can see that they use Z3 to prove the correction of the “old” procedure and if it can transfer to a new state or it is runnable,  it will return the new procedure so that it can be proved true.</p><h2 id="declarative-specification"><a class="header-anchor" href="#declarative-specification">🌊</a>Declarative Specification</h2><p>The authors also provide a declarative specification of the high level properties that the state-machine specification should satisfy. The verifier will check that these high level properties are indeed satisfied, helping increase the programmer’s confidence  in the correctness of the state-machine specification. To improve confidence in its correctness, there is a higher-level declarative specification to better capture programmer intuition about kernel behavior, in the form of a conjunction of crosscutting  properties that hold across all trap handlers.</p><p>本文链接: <a href="http://meng.uno/posts/55c9299d/">http://meng.uno/posts/55c9299d/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;state-machine-specification&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#state-machine-specification&quot;&gt;🌊&lt;/a&gt;State-machine Specification&lt;/h2&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="System" scheme="http://meng.uno/categories/System/"/>
    
    
      <category term="System Verification" scheme="http://meng.uno/tags/System-Verification/"/>
    
  </entry>
  
  <entry>
    <title>中文分词小赛数据</title>
    <link href="http://meng.uno/posts/649482ba/"/>
    <id>http://meng.uno/posts/649482ba/</id>
    <published>2017-10-30T08:02:41.000Z</published>
    <updated>2018-02-09T10:46:20.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote>  <p>纪念一下大四组织的一次中文分词小比赛。</p></blockquote><h2 id="分项数据"><a class="header-anchor" href="#分项数据">🌊</a>分项数据</h2><ul>  <li>训练数据： 链接: <a href="https://pan.baidu.com/s/1sl9JLqX" target="_blank" rel="noopener">https://pan.baidu.com/s/1sl9JLqX</a> 密码: 8am6</li>  <li>测试数据： 链接: <a href="https://pan.baidu.com/s/1eSeYhfO" target="_blank" rel="noopener">https://pan.baidu.com/s/1eSeYhfO</a> 密码: cnw2</li>  <li>相关参考答案： 链接: <a href="https://pan.baidu.com/s/1c2tVto0" target="_blank" rel="noopener">https://pan.baidu.com/s/1c2tVto0</a> 密码: 3rpt</li>  <li>有切分歧义的100个句子：链接: <a href="https://pan.baidu.com/s/1gfJ7Duz" target="_blank" rel="noopener">https://pan.baidu.com/s/1gfJ7Duz</a> 密码: 8mmx</li></ul><h2 id="所有数据"><a class="header-anchor" href="#所有数据">🌊</a>所有数据</h2><p>所有文件下载：链接: <a href="https://pan.baidu.com/s/1gfJ7Duz" target="_blank" rel="noopener">https://pan.baidu.com/s/1gfJ7Duz</a> 密码: 8mmx</p><h2 id="测试结果"><a class="header-anchor" href="#测试结果">🌊</a>测试结果</h2><p>相关PPT：<a href="http://www.meng.uno/nlpc.pdf" target="_blank" rel="noopener">http://www.meng.uno/nlpc.pdf</a></p><p>本文链接: <a href="http://meng.uno/posts/649482ba/">http://meng.uno/posts/649482ba/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
  &lt;p&gt;纪念一下大四组织的一次中文分词小比赛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;分项数据&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#分项数据&quot;&gt;🌊&lt;/a&gt;分项数据&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;训练数据：
      
    
    </summary>
    
      <category term="NLP" scheme="http://meng.uno/categories/NLP/"/>
    
    
      <category term="NLP" scheme="http://meng.uno/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript操作DOM</title>
    <link href="http://meng.uno/posts/2c47a986/"/>
    <id>http://meng.uno/posts/2c47a986/</id>
    <published>2017-03-05T08:03:01.000Z</published>
    <updated>2018-02-09T10:46:20.926Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建节点"><a class="header-anchor" href="#创建节点">🌊</a>创建节点</h2><p>除了可以使用<code>createElement</code>创建元素，也可以使用<code>createTextNode</code>创建文本节点。<code>document.body</code>指向的是<code>&lt;body&gt;</code>元素，<code>document.documentElement</code>则指向<code>&lt;html&gt;</code>元素。</p><figure class="highlight javascript">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="comment">//创建节点</span></span><br><span class="line">   <span class="keyword">var</span> createNode = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">   <span class="keyword">var</span> createTextNode = <span class="built_in">document</span>.createTextNode(<span class="string">"hello world"</span>);</span><br><span class="line">   createNode.appendChild(createTextNode);</span><br><span class="line">   <span class="built_in">document</span>.body.appendChild(createNode);</span><br><span class="line">   <span class="built_in">document</span>.documentElement.appendChild(createNode);</span><br></pre>      </td>    </tr>  </table></figure><h2 id="插入节点"><a class="header-anchor" href="#插入节点">🌊</a>插入节点</h2><p>可以使用appendChild，insertBefore，insertBefore接收两个参数，第一个是插入的节点，第二个是参照节点，如insertBefore(a,b)，则a会插入在b的前面</p><figure class="highlight javascript">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="comment">//插入节点</span></span><br><span class="line"> <span class="keyword">var</span> createNode = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line"><span class="keyword">var</span> createTextNode = <span class="built_in">document</span>.createTextNode(<span class="string">"hello world"</span>);</span><br><span class="line">createNode.appendChild(createTextNode);</span><br><span class="line"><span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line"><span class="built_in">document</span>.body.insertBefore(createNode,div1);</span><br></pre>      </td>    </tr>  </table></figure><h2 id="替换和删除元素"><a class="header-anchor" href="#替换和删除元素">🌊</a>替换和删除元素</h2><p>从replaceChild和removeChild的字面意思看，就是删除子节点，因此调用者，需要包含子节点div1，不然调用会报错。返回的节点是替换的或删除的元素，被替换/删除的元素仍然存在，但document中已经没有他们的位置了。</p><figure class="highlight javascript">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="comment">//替换元素</span></span><br><span class="line">   <span class="keyword">var</span> replaceChild = <span class="built_in">document</span>.body.replaceChild(createNode,div1);</span><br><span class="line"><span class="comment">//删除元素</span></span><br><span class="line">    <span class="keyword">var</span> removeChild = <span class="built_in">document</span>.body.removeChild(div1);</span><br></pre>      </td>    </tr>  </table></figure><h2 id="节点的属性"><a class="header-anchor" href="#节点的属性">🌊</a>节点的属性</h2><ul>  <li>firstChild:第一个子节点</li>  <li>lastChild:最后一个子节点</li>  <li>childNodes:子节点集合，获取其中子节点可</li>  <li>someNode.childNodes[index]或</li>  <li>someNode.childNodes.item(index)</li>  <li>nextSibling:下一个兄弟节点</li>  <li>previousSibling：上一个兄弟节点</li>  <li>parentNode：父节点</li></ul><figure class="highlight vbscript-html">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;ul id="ul"&gt;</span><br><span class="line">&lt;li&gt;sdsssssss&lt;/li&gt;</span><br><span class="line">&lt;li&gt;qqqq&lt;/li&gt;</span><br><span class="line">&lt;li&gt;wwww&lt;/li&gt;</span><br><span class="line">&lt;li&gt;eeee&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre>      </td>    </tr>  </table></figure><figure class="highlight javascript">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="comment">//节点属性</span></span><br><span class="line">  <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">"ul"</span>);</span><br><span class="line">  <span class="keyword">var</span> firstChild = ul.firstChild;</span><br><span class="line">  <span class="built_in">console</span>.log(firstChild.innerHTML);</span><br><span class="line">  <span class="keyword">var</span> lastChild = ul.lastChild;</span><br><span class="line">  <span class="built_in">console</span>.log(lastChild.innerHTML);</span><br><span class="line">  <span class="keyword">var</span> length = ul.childNodes.length;</span><br><span class="line">  <span class="built_in">console</span>.log(length);</span><br><span class="line">  <span class="keyword">var</span> secondChild = ul.childNodes.item(<span class="number">1</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(secondChild.innerHTML);</span><br><span class="line">  <span class="keyword">var</span> forthChild = ul.childNodes.item(<span class="number">2</span>).nextSibling;</span><br><span class="line">  <span class="built_in">console</span>.log(forthChild.innerHTML);</span><br><span class="line">  <span class="keyword">var</span> thridChild = forthChild.previousSibling;</span><br><span class="line">  <span class="built_in">console</span>.log(thridChild.innerHTML);</span><br><span class="line">  <span class="keyword">var</span> parentNode = forthChild.parentNode;</span><br><span class="line">  <span class="built_in">console</span>.log(parentNode.innerHTML);</span><br></pre>      </td>    </tr>  </table></figure><h2 id="文档片段"><a class="header-anchor" href="#文档片段">🌊</a>文档片段</h2><p>好处在于减少dom的渲染次数，可以优化性能。</p><figure class="highlight javascript">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="comment">//文本片段</span></span><br><span class="line">   <span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</span><br><span class="line">   <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">"ul"</span>);</span><br><span class="line">   <span class="keyword">var</span> li = <span class="literal">null</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">4</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">       li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line">       li.appendChild(<span class="built_in">document</span>.createTextNode(<span class="string">"item "</span>+i));</span><br><span class="line">       fragment.appendChild(li);</span><br><span class="line">   &#125;</span><br><span class="line">   ul.appendChild(fragment);</span><br></pre>      </td>    </tr>  </table></figure><h2 id="克隆元素"><a class="header-anchor" href="#克隆元素">🌊</a>克隆元素</h2><ul>  <li>someNode.cloneNode(true):深度克隆，会复制节点及整个子节点</li>  <li>someNode.cloneNode(false):浅克隆，会复制节点，但不复制子节点</li></ul><figure class="highlight php">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="comment">//克隆</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">clone</span> = ul.cloneNode(<span class="keyword">true</span>);</span><br><span class="line">document.body.appendChild(<span class="keyword">clone</span>);</span><br></pre>      </td>    </tr>  </table></figure><h2 id="注意："><a class="header-anchor" href="#注意：">🌊</a>注意：</h2><h3 id="childnodes-length存在跨浏览器的问题"><a class="header-anchor" href="#childnodes-length存在跨浏览器的问题">🌊</a>childNodes.length存在跨浏览器的问题</h3><p>可以看到有关列表的html片段没有用</p><figure class="highlight vbscript-html">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;ul id="ul"&gt;</span><br><span class="line">&lt;li&gt;sdsssssss&lt;/li&gt;</span><br><span class="line">&lt;li&gt;qqqq&lt;/li&gt;</span><br><span class="line">&lt;li&gt;wwww&lt;/li&gt;</span><br><span class="line">&lt;li&gt;eeee&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>这种书写格式而是使用没有换行的格式书写，是因为在不同的浏览器中，获取<code>ul.childNodes.length</code>的结果有差异：</p><ul>  <li>在ie中，ul.childNodes.length不会计算li之间的换行空格，从而得到数值为4</li>  <li>在ff、chrome,safari中，会有包含li之间的空白符的5个文本节点，因此ul.childNodes.length为9<br> 若要解决跨浏览器问题，可以将li之间的换行去掉，改成一行书写格式。  </li></ul><h3 id="clonenode存在跨浏览器的问题"><a class="header-anchor" href="#clonenode存在跨浏览器的问题">🌊</a>cloneNode存在跨浏览器的问题</h3><ul>  <li>在IE中，通过cloneNode方法复制的元素，会复制事件处理程序，比如，var b = a.cloneNode(true).若a存在click,mouseover等事件监听，则b也会拥有这些事件监听。</li>  <li>在ff,chrome,safari中，通过cloneNode方法复制的元素，只会复制特性，其他一切都不会复制<br> 因此，若要解决跨浏览器问题，在复制前，最好先移除事件处理程序。  </li></ul><p>本文链接: <a href="http://meng.uno/posts/2c47a986/">http://meng.uno/posts/2c47a986/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建节点&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#创建节点&quot;&gt;🌊&lt;/a&gt;创建节点&lt;/h2&gt;
&lt;p&gt;除了可以使用&lt;code&gt;createElement&lt;/code&gt;创建元素，也可以使用&lt;code&gt;createTextNode&lt;/code&gt;
      
    
    </summary>
    
      <category term="前端" scheme="http://meng.uno/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://meng.uno/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>HIT操作系统实验总结</title>
    <link href="http://meng.uno/posts/86743755/"/>
    <id>http://meng.uno/posts/86743755/</id>
    <published>2017-01-04T12:50:26.000Z</published>
    <updated>2018-02-09T10:46:20.931Z</updated>
    
    <content type="html"><![CDATA[<blockquote>  <p>哈工大《操作系统》六次实验每次需要修改的文件见：<a href="http://www.meng.uno/os.html" target="_blank" rel="noopener">修改文件列表</a><br> 本实验总结源自github项目：    <a href="https://github.com/HITAmigos/MIC" target="_blank" rel="noopener">MIC</a></p></blockquote><h2 id="操作系统引导"><a class="header-anchor" href="#操作系统引导">🌊</a>操作系统引导</h2><h3 id="bootsect-s"><a class="header-anchor" href="#bootsect-s">🌊</a>bootsect.s</h3><ul>  <li>实现屏幕输出</li>  <li>修改打印的字符串（空白也算作一个字符）</li>  <li>读入setup.s代码（包括：设置驱动器、磁头，读取setup.s的磁道和扇区，并跳到相应位置开始执行）</li></ul><h3 id="setup-s"><a class="header-anchor" href="#setup-s">🌊</a>setup.s</h3><ul>  <li>（和bootsect.s中部分代码相同）打印相关信息</li>  <li>（原代码已经可以部分打印硬件信息）需要在相关位置嵌入msg实现打印提示信息功能</li></ul><h3 id="build-c"><a class="header-anchor" href="#build-c">🌊</a>build.c</h3><ul>  <li>将bootsect.s、setup.s、system.s编译、链接生成Image文件</li></ul><h2 id="系统调用"><a class="header-anchor" href="#系统调用">🌊</a>系统调用</h2><ul>  <li>unistd.h文件：添加系统调用功能号</li>  <li>sys.h声明新的系统调用处理函数；添加系统调用处理程序索引值到指针数组表中</li>  <li>system_call.s中增加系统调用总数</li>  <li>makefile添加新的系统调用所在文件的编译链接规则（依赖关系）</li></ul><h2 id="进程运行轨迹的跟踪与统计"><a class="header-anchor" href="#进程运行轨迹的跟踪与统计">🌊</a>进程运行轨迹的跟踪与统计</h2><h3 id="process-c"><a class="header-anchor" href="#process-c">🌊</a>process.c</h3><ul>  <li>涉及到fork()和wait()系统调用</li>  <li>主要实现了一个函数——cpuio_bound()</li>  <li>用fork()建立若干个同时运行的子程序</li>  <li>父P等待所有子P退出后才退出，每个子P性质通过cpuio_bound()控制性质</li></ul><h3 id="fork-c"><a class="header-anchor" href="#fork-c">🌊</a>fork.c</h3><ul>  <li>fork系统调用函数</li></ul><h3 id="main-c"><a class="header-anchor" href="#main-c">🌊</a>main.c</h3><ul>  <li>内核的入口函数main()，对它的修改是增加日志创建语句，并将log文件关联到文件描述符log文件记录进程状态转换轨迹</li></ul><h3 id="kernel"><a class="header-anchor" href="#kernel">🌊</a>kernel</h3><p>主要寻找进程状态转换点：</p><ul>  <li>printk.c</li>  <li>sched.c</li>  <li>exit.c</li></ul><h2 id="信号量的实现和应用"><a class="header-anchor" href="#信号量的实现和应用">🌊</a>信号量的实现和应用</h2><h3 id="sem-open"><a class="header-anchor" href="#sem-open">🌊</a>sem_open</h3><ul>  <li>打开信号量</li></ul><h3 id="sem-wait"><a class="header-anchor" href="#sem-wait">🌊</a>sem_wait</h3><ul>  <li>信号量P操作——value–</li></ul><h3 id="sem-post"><a class="header-anchor" href="#sem-post">🌊</a>sem_post</h3><ul>  <li>信号量V操作——value++</li></ul><h3 id="sem-unlink"><a class="header-anchor" href="#sem-unlink">🌊</a>sem_unlink</h3><ul>  <li>释放信号量</li></ul><h2 id="地址映射与共享"><a class="header-anchor" href="#地址映射与共享">🌊</a>地址映射与共享</h2><h3 id="shm-c"><a class="header-anchor" href="#shm-c">🌊</a>shm.c</h3><ul>  <li>shmget()：得到一个共享内存标识符或创建一个共享内存对象并返回共享内存标识符</li>  <li>shmat()：连接共享内存标识符为shmid的共享内存，连接成功后把共享内存区对象映射到调用进程的地址空间，随后可像本地空间一样访问</li></ul><h3 id="sem-c"><a class="header-anchor" href="#sem-c">🌊</a>sem.c</h3><p>实现信号量的四种操作，与实验四相同</p><h2 id="字符显示的控制"><a class="header-anchor" href="#字符显示的控制">🌊</a>字符显示的控制</h2><h3 id="keyboard-s"><a class="header-anchor" href="#keyboard-s">🌊</a>keyboard.S</h3><ul>  <li>添加对字符F12的输入判断</li></ul><h3 id="console-c"><a class="header-anchor" href="#console-c">🌊</a>console.c</h3><ul>  <li>添加输出到控制台的字符控制</li></ul><h3 id="file-dev-c"><a class="header-anchor" href="#file-dev-c">🌊</a>file_dev.c</h3><ul>  <li>添加输出到文件的字符控制</li></ul><p>本文链接: <a href="http://meng.uno/posts/86743755/">http://meng.uno/posts/86743755/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
  &lt;p&gt;哈工大《操作系统》六次实验每次需要修改的文件见：&lt;a href=&quot;http://www.meng.uno/os.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;修改文件列表&lt;/a&gt;&lt;br&gt; 本实验总结源自github项
      
    
    </summary>
    
      <category term="操作系统" scheme="http://meng.uno/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://meng.uno/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>手写数字识别（SVM）</title>
    <link href="http://meng.uno/posts/7dac38a/"/>
    <id>http://meng.uno/posts/7dac38a/</id>
    <published>2016-12-17T04:08:13.000Z</published>
    <updated>2018-02-09T10:46:20.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调用第三方库"><a class="header-anchor" href="#调用第三方库">🌊</a>调用第三方库</h2><p>在此我选用的是sk-learn的关于svm的库，其关于此次实验的svm函数定义为：<br> svm.SVC(C=8.0, kernel=‘rbf’, gamma=0.1)<br> svm.SVC()函数的几个重要参数在其官方的介绍文档中有如下的解释：  <br> C :误差项的惩罚参数，浮点型，可选 (默认=1.0)；<br> kernel : 指定核函数类型，字符型，可选 (默认=‘rbf’)，如果使用自定义的核函数，需要预先计算核矩阵；<br> gamma : 浮点型, 可选 (默认=0.0)，’rbf’核函数的系数，需要注意的是，此处的gamma与课本中的sigma是互为倒数的关系（所以其可以为0）。<br> 因为是调用别人的库（应该说完全是别人的功劳），所以在实现上没有什么可以说的。</p><h3 id="代码"><a class="header-anchor" href="#代码">🌊</a>代码</h3><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre>      </td>      <td class="code">        <pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">Created on Thu Dec  1 13:30:21 2016</span></span><br><span class="line"><span class="string">@author: kuangmeng</span></span><br><span class="line"><span class="string">使用SVM分类器，从MNIST数据集中进行手写数字识别的分类程序</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line">import cPickle</span><br><span class="line">import gzip</span><br><span class="line">from sklearn import svm</span><br><span class="line">import time</span><br><span class="line">def load_data():</span><br><span class="line">    <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    返回包含训练数据、验证数据、测试数据的元组的模式识别数据</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line">    f = gzip.open(<span class="string">'data.gz'</span>, <span class="string">'rb'</span>)</span><br><span class="line">    training_data, validation_data, test_data = cPickle.load(f)</span><br><span class="line">    f.close()</span><br><span class="line">    return (training_data, validation_data, test_data)</span><br><span class="line">def Svm():</span><br><span class="line">    print (<span class="string">"开始时间："</span>,<span class="selector-tag">time</span>.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)) </span><br><span class="line">    training_data, validation_data, test_data = load_data()</span><br><span class="line">    # 传递训练模型的参数，这里用默认的参数</span><br><span class="line">    clf = svm.SVC(C=<span class="number">10.0</span>, kernel=<span class="string">'rbf'</span>, gamma=<span class="number">0.10</span>,cache_size=<span class="number">8000</span>,probability=False)</span><br><span class="line">    # 进行模型训练</span><br><span class="line">    clf.fit(training_data[<span class="number">0</span>], training_data[<span class="number">1</span>])</span><br><span class="line">    # 测试集测试预测结果</span><br><span class="line">    predictions = [int(a) <span class="keyword">for</span> <span class="selector-tag">a</span> <span class="keyword">in</span> clf.predict(test_data[<span class="number">0</span>])]</span><br><span class="line">    num_correct = sum(int(<span class="selector-tag">a</span> == y) <span class="keyword">for</span> <span class="selector-tag">a</span>, y <span class="keyword">in</span> zip(predictions, test_data[<span class="number">1</span>]))</span><br><span class="line">    print ("%s 中的 %s 测试正确。" % (num_correct, len(test_data[1])))</span><br><span class="line">    print (<span class="string">"结束时间："</span>,<span class="selector-tag">time</span>.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    Svm()</span><br></pre>      </td>    </tr>  </table></figure><h2 id="自己编程实现"><a class="header-anchor" href="#自己编程实现">🌊</a>自己编程实现</h2><p>在自己编程实现过程中，我也借鉴了很多其他人写的很成熟的方案，最终从数据结构、逻辑结构以及特征计算等方面得到比较合理的一组答案。</p><h3 id="逻辑结构"><a class="header-anchor" href="#逻辑结构">🌊</a>逻辑结构</h3><p>本次实验的程序分为“训练”和“测试”两部分，两部分分别进行的工作如下：</p><h4 id="训练"><a class="header-anchor" href="#训练">🌊</a>训练</h4><p>加载数据<br> 初始化模型  <br> 更新标签  <br> 初始化预测误差  <br> 迭代每个样本（用KT优化）  <br> 得到每个样本的模型  <br> 对步骤5的解释：  <br> 对于svm我们要求解a（数组），如果 a的所有分量满足svm对偶问题的KKT条件，那么这个问题的解就求出来了，我们svm模型学习也就完成了。如果没有满足KKT，那么我们就在 a中找两个分量 ai和 aj，其中 ai 是违反KKT条件最严重的分量，通过计算，使得 ai 和 aj满足KKT条件，直到a的所有分量都满足KKT条件。而且这个计算过程是收敛的，因为每次计算出来的新的两个分量，使得对偶问题中要优化的目标函数值更小。因为每次求解的那两个分量，是要优化问题在这两个分量上的极小值，所以每一次优化，都会使目标函数比上一次的优化结果的值变小。</p><h4 id="测试"><a class="header-anchor" href="#测试">🌊</a>测试</h4><p>加载数据<br> 对每个数据预测  <br> 计算正确率与相关信息逻辑结构  <br> 特征计算  <br> 仿照KKT的优化方法，在本次试验中，我将每张图片作为一个数据。由此得到对每一个测试样本的预测（如果在某个分类的计算时结果为正，则说明该测试样本属于该类别，结果为0则不属于此类别）。</p><h3 id="其他杂项"><a class="header-anchor" href="#其他杂项">🌊</a>其他杂项</h3><p>核函数选择：按照传统，选择的是RBF核函数，函数形式与教材完全相同；<br> 数据来源：来源自网友整理之后的数据（测试数据与训练数据没有均分）；  <br> SMO优化算法：  <br> 取初始值a(0)=0，令K=0；  <br> 选取优化变量a1(k) , a2(k) , 针对优化问题，求得最优解 a1(k+1) , a2(k+1) 更新 a(k) 为 a(k+1) ；<br> 在精度条件范围内是否满足停机条件，即是否有变量违反KKT条件，如果违反了，则令k=k+1，跳转2，否则4；  <br> 求得近似解â =a(k+1)<br> 其中第3步中，是否违反KKT条件，对于a(k)的每个分量按照以下的违反KKT条件的公式进行验算即可。  <br> 变量选取分为两步，第一步是选取违反KKT条件最严重的ai，第二步是根据已经选取的第一个变量，选择优化程度最大的第二个变量。  <br> 违反KKT条件最严重的变量可以按照这样的规则选取，首先看0&lt;ai&lt;C的那些分量中，是否有违反KKT条件的，如果有，则选取yig(xi)最小的那个做为a1。如果没有则遍历所有的样本点，在违反KKT条件的分量中选取yig(xi)最小的做为a1。  <br> 当选择了a1后，如果a1对应的E1为正，选择Ei最小的那个分量最为a2，如果E1为负，选择Ei最大的那个分量最为a2，这是因为anew2依赖于|E1−E2|。 如果选择的a2，不能满足下降的最小步长，那么就遍历所有的支持向量点做为a2进行试用，如果仍然都不能满足下降的最小步长，那么就遍历所有的样本点做为a2试用。如果还算是不能满足下降的最小步长，那么就重新选择a1。</p><h3 id="代码-v2"><a class="header-anchor" href="#代码-v2">🌊</a>代码</h3><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre>      </td>      <td class="code">        <pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">Created on Sun Dec  4 14:24:53 2016</span></span><br><span class="line"><span class="string">@author: kuangmeng</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">import math</span><br><span class="line">class model:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self<span class="selector-class">.a</span> = []</span><br><span class="line">        self<span class="selector-class">.b</span> = <span class="number">0.0</span>   </span><br><span class="line">class DATA:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.samples = []        # 样本数据</span><br><span class="line">        self.tests = []          # 测试数据</span><br><span class="line">        self.models = []         # 训练的模型</span><br><span class="line">        self.forecasterror = []      # 预测知与真实y之差Ei</span><br><span class="line">        self.modelnum = 0         # 当前正使用或训练的模型</span><br><span class="line">        self.cache= []   # 缓存kernel函数的计算结果</span><br><span class="line">        self.sigma = 10        # sigma</span><br><span class="line">    def init_models(self):</span><br><span class="line">        <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">            m = model()</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(self.samples)):</span><br><span class="line">                m<span class="selector-class">.a</span><span class="selector-class">.append</span>(<span class="number">0</span>)</span><br><span class="line">            self<span class="selector-class">.models</span><span class="selector-class">.append</span>(m)</span><br><span class="line">    def init_cache(self):</span><br><span class="line">        <span class="selector-tag">i</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> self<span class="selector-class">.samples</span>: </span><br><span class="line">            print (<span class="string">"正在计算第"</span>,i+<span class="number">1</span>,<span class="string">"个样本的RBF核"</span>)</span><br><span class="line">            self<span class="selector-class">.cache</span><span class="selector-class">.append</span>([])</span><br><span class="line">            j = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> z <span class="keyword">in</span> self<span class="selector-class">.samples</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="selector-tag">i</span> &gt; j:</span><br><span class="line">                    self<span class="selector-class">.cache</span>[i].append(self<span class="selector-class">.cache</span>[j][i])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self<span class="selector-class">.cache</span>[i].append(RBF(x,z))</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="selector-tag">i</span> += <span class="number">1</span>                 </span><br><span class="line">class image:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self<span class="selector-class">.data</span> = []</span><br><span class="line">        self<span class="selector-class">.num</span> = <span class="number">0</span></span><br><span class="line">        self<span class="selector-class">.label</span> = []</span><br><span class="line">        self<span class="selector-class">.filename</span> = <span class="string">""</span></span><br><span class="line">gv = DATA()</span><br><span class="line"># RBF核函数</span><br><span class="line">def RBF(j, i):</span><br><span class="line">    <span class="keyword">if</span> j == <span class="selector-tag">i</span>:</span><br><span class="line">        return math.exp(<span class="number">0</span>)</span><br><span class="line">    sigma = gv.sigma</span><br><span class="line">    ret = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> range(len(j.data)):</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(len(j<span class="selector-class">.data</span>[m])):</span><br><span class="line">            ret += math.pow(int(j<span class="selector-class">.data</span>[m][n]) - int(<span class="selector-tag">i</span><span class="selector-class">.data</span>[m][n]), <span class="number">2</span>)</span><br><span class="line">    ret = math.exp(-ret/sigma)</span><br><span class="line">    return ret</span><br><span class="line">#加载测试与训练数据</span><br><span class="line">def loaddata(dirpath, name):</span><br><span class="line">    files = os.listdir(dirpath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="selector-tag">img</span> = image()</span><br><span class="line">        <span class="selector-tag">img</span><span class="selector-class">.data</span> = images(dirpath + file)</span><br><span class="line">        <span class="selector-tag">img</span><span class="selector-class">.num</span> = int(file[<span class="number">0</span>])</span><br><span class="line">        <span class="selector-tag">img</span><span class="selector-class">.filename</span> = file</span><br><span class="line">        name.append(img)</span><br><span class="line">#图片分列        </span><br><span class="line">def images(path):</span><br><span class="line">    <span class="selector-tag">img</span> = []</span><br><span class="line">    file = open(path, <span class="string">"r"</span>) </span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">        line = line[:-<span class="number">2</span>]</span><br><span class="line">        <span class="selector-tag">img</span>.append(line)</span><br><span class="line">    return <span class="selector-tag">img</span>  </span><br><span class="line">#更新样本标签，正在训练啥就将啥的标签定为<span class="number">1</span>，其他的定为-<span class="number">1</span>    </span><br><span class="line">def update_samples_label(num):</span><br><span class="line">    <span class="keyword">for</span> <span class="selector-tag">img</span> <span class="keyword">in</span> gv<span class="selector-class">.samples</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="selector-tag">img</span><span class="selector-class">.num</span> == num:</span><br><span class="line">            <span class="selector-tag">img</span><span class="selector-class">.label</span><span class="selector-class">.append</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="selector-tag">img</span><span class="selector-class">.label</span><span class="selector-class">.append</span>(-<span class="number">1</span>)          </span><br><span class="line">#初始化DATA.forecasterror</span><br><span class="line">def init_forecasterror():</span><br><span class="line">    gv<span class="selector-class">.forecasterror</span> = []</span><br><span class="line">    <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(gv.samples)):</span><br><span class="line">        diff = <span class="number">0.0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(gv.samples)):</span><br><span class="line">            <span class="keyword">if</span> gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[j] != <span class="number">0</span>:</span><br><span class="line">                 diff += gv.models[gv.modelnum].a[j] * gv.samples[j].label[gv.modelnum] * gv.cache[j][i]</span><br><span class="line">        diff += gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.b</span> </span><br><span class="line">        diff -= gv<span class="selector-class">.samples</span>[i]<span class="selector-class">.label</span>[gv.modelnum]</span><br><span class="line">        gv<span class="selector-class">.forecasterror</span><span class="selector-class">.append</span>(diff)</span><br><span class="line">#更新DATA<span class="selector-class">.forecasterror</span>        </span><br><span class="line">def update_forecasterror(i, new_ai, j, new_bj, new_b):</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> range(len(gv.samples)):</span><br><span class="line">        diff = (new_ai - gv.models[gv.modelnum].a[i])* gv.samples[i].label[gv.modelnum] * gv.cache[i][idx]</span><br><span class="line">        diff += (new_bj - gv.models[gv.modelnum].a[j])* gv.samples[j].label[gv.modelnum] * gv.cache[j][idx]</span><br><span class="line">        diff += new_b - gv<span class="selector-class">.models</span>[gv.modelnum].b</span><br><span class="line">        diff += gv<span class="selector-class">.forecasterror</span>[idx]</span><br><span class="line">        gv<span class="selector-class">.forecasterror</span>[idx] = diff</span><br><span class="line"># g(x)</span><br><span class="line">def predict(m):</span><br><span class="line">    pred = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(gv.samples)):</span><br><span class="line">        <span class="keyword">if</span> gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[j] != <span class="number">0</span>:</span><br><span class="line">            pred += gv.models[gv.modelnum].a[j] * gv.samples[j].label[gv.modelnum] * RBF(gv.samples[j],m)</span><br><span class="line">    pred += gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.b</span> </span><br><span class="line">    return pred</span><br><span class="line">def save_models():</span><br><span class="line">    <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        fn = open(<span class="string">"models/"</span> + str(i) + <span class="string">"_a.model"</span>, <span class="string">"w"</span>)</span><br><span class="line">        <span class="keyword">for</span> ai <span class="keyword">in</span> gv<span class="selector-class">.models</span>[i]<span class="selector-class">.a</span>:</span><br><span class="line">            fn.write(str(ai))</span><br><span class="line">            fn.write(<span class="string">'\n'</span>)</span><br><span class="line">        fn.close()</span><br><span class="line">        fn = open(<span class="string">"models/"</span> + str(i) + <span class="string">"_b.model"</span>, <span class="string">"w"</span>)</span><br><span class="line">        fn.write(str(gv<span class="selector-class">.models</span>[i].b))</span><br><span class="line">        fn.close()</span><br><span class="line">def load_models():</span><br><span class="line">    <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        fn = open(<span class="string">"models/"</span> + str(i) + <span class="string">"_a.model"</span>, <span class="string">"r"</span>)</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> fn:</span><br><span class="line">            gv<span class="selector-class">.models</span>[i]<span class="selector-class">.a</span>[j] = <span class="attribute">float</span>(line)</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        fn.close()</span><br><span class="line">        fn = open(<span class="string">"models/"</span> + str(i) + <span class="string">"_b.model"</span>, <span class="string">"r"</span>)</span><br><span class="line">        gv.models[i].b = float(fn.readline())</span><br><span class="line">        fn.close()</span><br><span class="line">###</span><br><span class="line">#  T: tolerance 误差容忍度(精度)</span><br><span class="line">#  times: 迭代次数</span><br><span class="line"># 优化方法：SMO</span><br><span class="line">#  C: 惩罚系数</span><br><span class="line">#  modelnum: 模型序号0到9</span><br><span class="line">#  step: aj移动的最小步长</span><br><span class="line">###</span><br><span class="line">def train(T, times, C, modelnum, step):</span><br><span class="line">    <span class="selector-tag">time</span> = <span class="number">0</span></span><br><span class="line">    gv<span class="selector-class">.modelnum</span> = modelnum</span><br><span class="line">    update_samples_label(modelnum)</span><br><span class="line">    init_forecasterror()</span><br><span class="line">    updated = True</span><br><span class="line">    while <span class="selector-tag">time</span> &lt; times and updated:</span><br><span class="line">        updated = False</span><br><span class="line">        <span class="selector-tag">time</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(gv.samples)):</span><br><span class="line">            ai = gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[i]</span><br><span class="line">            Ei = gv<span class="selector-class">.forecasterror</span>[i]</span><br><span class="line">            #计算违背KKT的点</span><br><span class="line">            if (gv.samples[i].label[gv.modelnum] * Ei &lt; -T and ai &lt; C) or (gv.samples[i].label[gv.modelnum] * Ei &gt; T and ai &gt; 0):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(len(gv.samples)):</span><br><span class="line">                    <span class="keyword">if</span> j == <span class="selector-tag">i</span>: continue</span><br><span class="line">                    kii = gv<span class="selector-class">.cache</span>[i][i]</span><br><span class="line">                    kjj = gv<span class="selector-class">.cache</span>[j][j]</span><br><span class="line">                    kji = kij = gv<span class="selector-class">.cache</span>[i][j] </span><br><span class="line">                    eta = kii + kjj - 2 * kij </span><br><span class="line">                    <span class="keyword">if</span> eta &lt;= <span class="number">0</span>: continue</span><br><span class="line">                    new_aj = gv.models[gv.modelnum].a[j] + gv.samples[j].label[gv.modelnum] * (gv.forecasterror[i] - gv.forecasterror[j]) / eta # f 7.106</span><br><span class="line">                    L = <span class="number">0.0</span></span><br><span class="line">                    H = <span class="number">0.0</span></span><br><span class="line">                    a1_old = gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[i]</span><br><span class="line">                    a2_old = gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[j]</span><br><span class="line">                    <span class="keyword">if</span> gv<span class="selector-class">.samples</span>[i]<span class="selector-class">.label</span>[gv.modelnum] == gv<span class="selector-class">.samples</span>[j]<span class="selector-class">.label</span>[gv.modelnum]:</span><br><span class="line">                        L = max(<span class="number">0</span>, a2_old + a1_old - C)</span><br><span class="line">                        H = min(C, a2_old + a1_old)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        L = max(<span class="number">0</span>, a2_old - a1_old)</span><br><span class="line">                        H = min(C, C + a2_old - a1_old)</span><br><span class="line">                    <span class="keyword">if</span> new_aj &gt; H:</span><br><span class="line">                        new_aj = H</span><br><span class="line">                    <span class="keyword">if</span> new_aj &lt; L:</span><br><span class="line">                        new_aj = L</span><br><span class="line">                    <span class="keyword">if</span> abs(a2_old - new_aj) &lt; step:</span><br><span class="line">                       # print ("j = %d, is not moving enough" % j)</span><br><span class="line">                        continue</span><br><span class="line">                    new_ai = a1_old + gv.samples[i].label[gv.modelnum] * gv.samples[j].label[gv.modelnum] * (a2_old - new_aj) # f 7.109 </span><br><span class="line">                    new_b1 = gv.models[gv.modelnum].b - gv.forecasterror[i] - gv.samples[i].label[gv.modelnum] * kii * (new_ai - a1_old) - gv.samples[j].label[gv.modelnum] * kji * (new_aj - a2_old) # f7.115</span><br><span class="line">                    new_b2 = gv.models[gv.modelnum].b - gv.forecasterror[j] - gv.samples[i].label[gv.modelnum]*kji*(new_ai - a1_old) - gv.samples[j].label[gv.modelnum]*kjj*(new_aj-a2_old)    # f7.116</span><br><span class="line">                    <span class="keyword">if</span> new_ai &gt; <span class="number">0</span> and new_ai &lt; C: new_b = new_b1</span><br><span class="line">                    elif new_aj &gt; <span class="number">0</span> and new_aj &lt; C: new_b = new_b2</span><br><span class="line">                    <span class="keyword">else</span>: new_b = (new_b1 + new_b2) / <span class="number">2.0</span></span><br><span class="line">                    update_forecasterror(<span class="selector-tag">i</span>, new_ai, j, new_aj, new_b)</span><br><span class="line">                    gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[i] = new_ai</span><br><span class="line">                    gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.a</span>[j] = new_aj</span><br><span class="line">                    gv<span class="selector-class">.models</span>[gv.modelnum]<span class="selector-class">.b</span> = new_b</span><br><span class="line">                    updated = True</span><br><span class="line">                    print ("迭代次数: %d, 修改组合: i: %d 与 j:%d" %(time, i, j))</span><br><span class="line">                    break</span><br><span class="line"># 测试数据</span><br><span class="line">def test():</span><br><span class="line">    record = <span class="number">0</span></span><br><span class="line">    record_correct = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> <span class="selector-tag">img</span> <span class="keyword">in</span> gv<span class="selector-class">.tests</span>: </span><br><span class="line">        print (<span class="string">"正在测试："</span>, <span class="selector-tag">img</span>.filename)</span><br><span class="line">        <span class="keyword">for</span> modelnum <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            gv<span class="selector-class">.modelnum</span> = modelnum</span><br><span class="line">            <span class="keyword">if</span> predict(img) &gt; <span class="number">0</span>:</span><br><span class="line">                print (<span class="string">"测试结果："</span>,modelnum)</span><br><span class="line">                record += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> modelnum == int(<span class="selector-tag">img</span><span class="selector-class">.filename</span>[<span class="number">0</span>]):</span><br><span class="line">                    record_correct += <span class="number">1</span></span><br><span class="line">                break</span><br><span class="line">    print (<span class="string">"相关记录数量:"</span>, record)</span><br><span class="line">    print (<span class="string">"正确识别数量:"</span>, record_correct)</span><br><span class="line">    print (<span class="string">"正确识别比例:"</span>, record_correct/record)</span><br><span class="line">    print (<span class="string">"测试数据总量:"</span>, len(gv.tests))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print (<span class="string">"开始时间："</span>,<span class="selector-tag">time</span>.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)) </span><br><span class="line">    training = True</span><br><span class="line">    loaddata(<span class="string">"train/"</span>, gv.samples)</span><br><span class="line">    loaddata(<span class="string">"test/"</span>, gv.tests)    </span><br><span class="line">    print (<span class="string">"训练数据个数："</span>,len(gv.samples))</span><br><span class="line">    print (<span class="string">"测试数据个数："</span>,len(gv.tests))</span><br><span class="line">    <span class="keyword">if</span> training == True:</span><br><span class="line">        gv.init_cache()</span><br><span class="line">        gv.init_models()</span><br><span class="line">    print (<span class="string">"模型初始化成功！"</span>) </span><br><span class="line">    print (<span class="string">"当前时间："</span>,<span class="selector-tag">time</span>.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>))        </span><br><span class="line">    T = <span class="number">0.0001</span></span><br><span class="line">    C = <span class="number">10</span></span><br><span class="line">    step = <span class="number">0.001</span></span><br><span class="line">    gv<span class="selector-class">.sigma</span> = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> training == True:</span><br><span class="line">       <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            print (<span class="string">"正在训练模型:"</span>, i)</span><br><span class="line">            train(T, <span class="number">10</span>, C, <span class="selector-tag">i</span>, step)</span><br><span class="line">            save_models()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        load_models()</span><br><span class="line">        <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            update_samples_label(i)</span><br><span class="line">    print (<span class="string">"训练完成时间："</span>,<span class="selector-tag">time</span>.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)) </span><br><span class="line">    test()</span><br><span class="line">    print (<span class="string">"测试完成时间："</span>,<span class="selector-tag">time</span>.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>))</span><br></pre>      </td>    </tr>  </table></figure><p>本文链接: <a href="http://meng.uno/posts/7dac38a/">http://meng.uno/posts/7dac38a/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;调用第三方库&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#调用第三方库&quot;&gt;🌊&lt;/a&gt;调用第三方库&lt;/h2&gt;
&lt;p&gt;在此我选用的是sk-learn的关于svm的库，其关于此次实验的svm函数定义为：&lt;br&gt; svm.SVC(C=8.0, ke
      
    
    </summary>
    
      <category term="机器学习" scheme="http://meng.uno/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://meng.uno/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>多项式拟合曲线——最小二乘法</title>
    <link href="http://meng.uno/posts/1af17fd9/"/>
    <id>http://meng.uno/posts/1af17fd9/</id>
    <published>2016-12-17T03:59:39.000Z</published>
    <updated>2018-02-09T10:46:20.929Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码，最小二乘法比较简单，在拟合效果上也相当不错：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import matplotlib<span class="selector-class">.pyplot</span> as plt</span><br><span class="line">import numpy</span><br><span class="line">import random</span><br><span class="line"></span><br><span class="line">f = plt.figure()</span><br><span class="line">draw = f.add_subplot(<span class="number">111</span>)</span><br><span class="line">#拟合函数的次数限制</span><br><span class="line">times=<span class="number">9</span></span><br><span class="line">tail=times+<span class="number">1</span></span><br><span class="line">x = numpy.arange(-<span class="number">2</span>,<span class="number">2</span>,<span class="number">0.1</span>)</span><br><span class="line">y = [((xi-<span class="number">1</span>)*(xi*xi-<span class="number">1</span>)+<span class="number">0.5</span>)*numpy.cos(xi) <span class="keyword">for</span> xi <span class="keyword">in</span> x]</span><br><span class="line">#所有使用到的全局变量声明</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">xlabel=[]</span><br><span class="line">ylabel=[]</span><br><span class="line">A=[]</span><br><span class="line">B=[]</span><br><span class="line">tempA=[]</span><br><span class="line">tempB=[]</span><br><span class="line">X=[]</span><br><span class="line">Y=[]</span><br><span class="line">#-----------------------------</span><br><span class="line">#生成数据，加入cos函数，作为噪声！</span><br><span class="line"><span class="keyword">for</span> xi <span class="keyword">in</span> x:</span><br><span class="line">    r=float(random.randint(80,100))/100</span><br><span class="line">    xlabel.append(xi*r)</span><br><span class="line">    ylabel.append(y[i]*r)</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">draw.plot(xlabel,ylabel,<span class="attribute">color</span>=<span class="string">'b'</span>,linestyle=<span class="string">''</span>,marker=<span class="string">'*'</span>)</span><br><span class="line">length=len(xlabel)</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">0</span>,tail):</span><br><span class="line">tempA=[]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,tail):</span><br><span class="line">temp=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,length):</span><br><span class="line">d=<span class="number">1.0</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">0</span>,j+i):</span><br><span class="line">d=d*xlabel[k]</span><br><span class="line">temp+=d</span><br><span class="line">tempA.append(temp)</span><br><span class="line">A.append(tempA)</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">0</span>,tail):</span><br><span class="line">temp=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,length):</span><br><span class="line">d=<span class="number">1.0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,i):</span><br><span class="line">d=d*xlabel[k]</span><br><span class="line">temp+=ylabel[k]*d</span><br><span class="line">B.append(temp)</span><br><span class="line"> #X为可行解</span><br><span class="line">X=numpy<span class="selector-class">.linalg</span><span class="selector-class">.solve</span>(A,B)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">'可行解a(x的系数)的矩阵表示为：[a0,---,a%d]'</span>%(times)</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(X)</span></span></span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">0</span>,length):</span><br><span class="line">temp=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,tail):</span><br><span class="line">d=<span class="number">1.0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,j):</span><br><span class="line">d*=x[i]</span><br><span class="line">d*=X[j]</span><br><span class="line">temp+=d</span><br><span class="line">Y.append(temp)</span><br><span class="line">draw.plot(x,Y,<span class="attribute">color</span>=<span class="string">'r'</span>,linestyle=<span class="string">'-'</span>,marker=<span class="string">'.'</span>)</span><br></pre>      </td>    </tr>  </table></figure><p>本文链接: <a href="http://meng.uno/posts/1af17fd9/">http://meng.uno/posts/1af17fd9/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接上代码，最小二乘法比较简单，在拟合效果上也相当不错：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&quot;gutter&quot;&gt;
        &lt;pre&gt;&lt;span class=
      
    
    </summary>
    
      <category term="机器学习" scheme="http://meng.uno/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://meng.uno/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>主成分分析（PCA）</title>
    <link href="http://meng.uno/posts/6c0d033f/"/>
    <id>http://meng.uno/posts/6c0d033f/</id>
    <published>2016-12-17T03:52:21.000Z</published>
    <updated>2018-02-09T10:46:20.932Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验要求"><a class="header-anchor" href="#实验要求">🌊</a>实验要求</h2><h3 id="实验目标"><a class="header-anchor" href="#实验目标">🌊</a>实验目标</h3><p>实现一个PCA模型，能够对给定数据进行降维（即找到其中的主成分）</p><h3 id="实验过程"><a class="header-anchor" href="#实验过程">🌊</a>实验过程</h3><p>首先人工生成一些数据（如三维数据），让它们主要分布在低维空间中，如首先让某个维度的方差远小于其它维度，然后对这些数据旋转。生成这些数据后，用你的PCA方法进行主成分提取。</p><p>找一个人脸数据（小点样本量），用你实现PCA方法对该数据降维，找出一些主成分，然后用这些主成分对每一副人脸图像进行重建，比较一些它们与原图像有多大差别（用信噪比衡量）。</p><h2 id="实验准备"><a class="header-anchor" href="#实验准备">🌊</a>实验准备</h2><h3 id="降维的必要"><a class="header-anchor" href="#降维的必要">🌊</a>降维的必要</h3><p>多重共线性–预测变量之间相互关联。多重共线性会导致解空间的不稳定，从而可能导致结果的不连贯。</p><p>高维空间本身具有稀疏性。一维正态分布有68%的值落于正负标准差之间，而在十维空间上只有0.02%。</p><p>过多的变量会妨碍查找规律的建立。</p><p>仅在变量层面上分析可能会忽略变量之间的潜在联系。例如几个预测变量可能落入仅反映数据某一方面特征的一个组内。</p><h3 id="降维的目的"><a class="header-anchor" href="#降维的目的">🌊</a>降维的目的</h3><ul>  <li>减少预测变量的个数</li>  <li>确保这些变量是相互独立的</li>  <li>提供一个框架来解释结果</li>  <li>降维的方法</li>  <li>主成分分析</li>  <li>因子分析</li>  <li>用户自定义复合</li></ul><h2 id="有关pca"><a class="header-anchor" href="#有关pca">🌊</a>有关PCA</h2><h3 id="pca概念"><a class="header-anchor" href="#pca概念">🌊</a>PCA概念</h3><p>主成分分析 （ Principal Component Analysis ， PCA ）或者主元分析。是一种掌握事物主要矛盾的统计分析方法，它可以从多元事物中解析出主要影响因素，揭示事物的本质，简化复杂的问题。计算主成分的目的是将高维数据投影到较低维空间。给定 n 个变量的 m 个观察值，形成一个 n * m 的数据矩阵， n 通常比较大。对于一个由多个变量描述的复杂事物，人们难以认识，那么是否可以抓住事物主要方面进行重点分析呢？如果事物的主要方面刚好体现在几个主要变量上，我们只需要将这几个变量分离出来，进行详细分析。但是，在一般情况下，并不能直接找出这样的关键变量。这时我们可以用原有变量的线性组合来表示事物的主要方面，  PCA 就是这样一种分析方法。</p><h3 id="pca作用范围"><a class="header-anchor" href="#pca作用范围">🌊</a>PCA作用范围</h3><p>PCA 主要用于数据降维，对于一系列例子的特征组成的多维向量，多维向量里的某些元素本身没有区分性，比如某个元素在所有的例子中都为1，或者与1差距不大，那么这个元素本身就没有区分性，用它做特征来区分，贡献会非常小。所以我们的目的是找那些变化大的元素，即方差大的那些维，而去除掉那些变化不大的维，从而使特征留下的都是“精品”，而且计算量也变小了。 对于一个K维的特征来说，相当于它的每一维特征与其他维都是正交的（相当于在多维坐标系中，坐标轴都是垂直的），那么我们可以变化这些维的坐标系，从而使这个特征在某些维上方差大，而在某些维上方差很小。</p><h3 id="pca的算法步骤"><a class="header-anchor" href="#pca的算法步骤">🌊</a>PCA的算法步骤</h3><ol>  <li>    <p>设有m条n维数据。</p>  </li>  <li>    <p>将原始数据按列组成n行m列矩阵X</p>  </li>  <li>    <p>将X的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值</p>  </li>  <li>    <p>求出协方差矩阵C=1/mXX’</p>  </li>  <li>    <p>求出协方差矩阵的特征值及对应的特征向量</p>  </li>  <li>    <p>将特征向量按对应特征值大小从上到下按行排列成矩阵，取前k行组成矩阵P</p>  </li>  <li>    <p>Y=PX即为降维到k维后的数据</p>  </li></ol><h2 id="实验环境"><a class="header-anchor" href="#实验环境">🌊</a>实验环境</h2><p>Spyder 作为Python开发的集成开发环境；<br> 编程语言：Python 3.5<br> 操作系统：macOS Sierra</p><h2 id="小结"><a class="header-anchor" href="#小结">🌊</a>小结</h2><h3 id="pca的应用分析"><a class="header-anchor" href="#pca的应用分析">🌊</a>PCA的应用分析</h3><p>对于一个训练集，100个对象模板，特征是10维，那么它可以建立一个100*10的矩阵，作为样本。求这个样本的协方差矩阵，得到一个10*10的协方差矩阵，然后求出这个协方差矩阵的特征值和特征向量，应该有10个特征值和特征向量，我们根据特征值的大小，取前四个特征值所对应的特征向量，构成一个10*4的矩阵，这个矩阵就是我们要求的特征矩阵，100*10的样本矩阵乘以这个10*4的特征矩阵，就得到了一个100*4的新的降维之后的样本矩阵，每个特征的维数下降了。当给定一个测试的特征集之后，比如1*10维的特征，乘以上面得到的10*4的特征矩阵，便可以得到一个1*4的特征，用这个特征去分类。所以做PCA实际上是求得这个投影矩阵，用高维的特征乘以这个投影矩阵，便可以将高维特征的维数下降到指定的维数。</p><p>在进行基因表达数据分析时，一个重要问题是确定每个实验数据是否是独立的，如果每次实验数据之间不是独立的，则会影响基因表达数据分析结果的准确性。对于利用基因芯片所检测到的基因表达数据，如果用 PCA 方法进行分析，可以将各个基因作为变量，也可以将实验条件作为变量。当将基因作为变量时，通过分析确定一组“主要基因元素”，它们能够很好地说明基因的特征，解释实验现象；当将实验条件作为变量时，通过分析确定一组“主要实验因素”，它们能够很好地刻画实验条件的特征，解释基因的行为。</p><p>PCA作为基础的数学分析方法，其实际应用十分广泛，比如人口统计学、数量地理学、分子动力学模拟、数学建模、数理分析等学科中均有应用，是一种常用的多变量分析方法。</p><h3 id="pca优缺点"><a class="header-anchor" href="#pca优缺点">🌊</a>PCA优缺点</h3><h4 id="优点："><a class="header-anchor" href="#优点：">🌊</a>优点：</h4><p>以方差衡量信息的无监督学习，不受样本标签限制；</p><p>各主成分之间正交，可消除原始数据成分间的相互影响；<br> 可减少指标选择的工作量；</p><p>用少数指标代替多数指标，利用PCA降维是最常用的算法；<br> 计算方法简单，易于实现。</p><h4 id="缺点："><a class="header-anchor" href="#缺点：">🌊</a>缺点：</h4><p>主成分解释其含义往往具有一定的模糊性，不如原始样本完整；</p><p>贡献率小的主成分往往可能含有对样本差异的重要信息；</p><p>特征值矩阵的正交向量空间是否唯一有待讨论；</p><p>属于无监督学习。</p><h2 id="代码"><a class="header-anchor" href="#代码">🌊</a>代码</h2><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre>      </td>      <td class="code">        <pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">Created on Tue Nov 29 15:51:25 2016</span></span><br><span class="line"><span class="string">@author: kuangmeng</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib<span class="selector-class">.pyplot</span> as plt</span><br><span class="line">#全局变量定义区</span><br><span class="line">XLabel = list()</span><br><span class="line">YLabel = list()</span><br><span class="line">phi = [<span class="number">0</span>., <span class="number">0</span>.]</span><br><span class="line">#自己定义的矩阵转换函数</span><br><span class="line">def Transport(matrix):</span><br><span class="line">        temp = list()</span><br><span class="line">        <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(matrix[<span class="number">0</span>])):</span><br><span class="line">            temp.append(list())</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(matrix)):</span><br><span class="line">                temp[i].append(matrix[j][i])</span><br><span class="line">        return temp</span><br><span class="line">#加载文件（可以通过更改文件名来加载不同的测试数据）</span><br><span class="line">data_set = open(<span class="string">'testSet.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data_set.readlines():</span><br><span class="line">    data_line = line.strip().split()</span><br><span class="line">    tmpx = <span class="attribute">float</span>(data_line[<span class="number">0</span>])</span><br><span class="line">    tmpy = <span class="attribute">float</span>(data_line[<span class="number">1</span>])</span><br><span class="line">    phi[<span class="number">0</span>] += tmpx</span><br><span class="line">    phi[<span class="number">1</span>] += tmpy</span><br><span class="line">    XLabel.append(tmpx)</span><br><span class="line">    YLabel.append(tmpy)</span><br><span class="line">phi[<span class="number">0</span>] = phi[<span class="number">0</span>]/<span class="number">100.0</span></span><br><span class="line">phi[<span class="number">1</span>] = phi[<span class="number">1</span>]/<span class="number">100.0</span></span><br><span class="line">data_set.close()</span><br><span class="line">#加载结束</span><br><span class="line">temp_x = list()</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">     temp_x.append([XLabel[i]-phi[<span class="number">0</span>], YLabel[i]-phi[<span class="number">1</span>]])</span><br><span class="line">temp_x_ = Transport(temp_x)</span><br><span class="line">sigma = np.dot(temp_x_, temp_x)</span><br><span class="line">D,V= np<span class="selector-class">.linalg</span><span class="selector-class">.eig</span>(sigma)</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">     <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">         V<span class="selector-class">.real</span>[i][j] *= -<span class="number">1</span></span><br><span class="line">temp_v_ = Transport(V.real)</span><br><span class="line">tr1 = list()</span><br><span class="line">tr1.append(XLabel)</span><br><span class="line">tr1.append(YLabel)</span><br><span class="line">tr1 = Transport(tr1)</span><br><span class="line">xr1 = np.dot(tr1, temp_v_[<span class="number">0</span>])</span><br><span class="line">xr2 = np.dot(phi, temp_v_[<span class="number">1</span>])</span><br><span class="line">xr = tr1</span><br><span class="line">#        print xr</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(XLabel)):</span><br><span class="line">      xr[i][<span class="number">0</span>] = np.dot(xr1[i], V<span class="selector-class">.real</span>[<span class="number">0</span>][<span class="number">0</span>])+np.dot(xr2, V<span class="selector-class">.real</span>[<span class="number">0</span>][<span class="number">1</span>])</span><br><span class="line">      xr[i][<span class="number">1</span>] = np.dot(xr1[i], V<span class="selector-class">.real</span>[<span class="number">1</span>][<span class="number">0</span>])+np.dot(xr2, V<span class="selector-class">.real</span>[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">#        print xr</span><br><span class="line">plt.plot(XLabel, YLabel, <span class="string">'r+'</span>)</span><br><span class="line">temp_xr = Transport(xr)</span><br><span class="line">plt.plot(temp_xr[<span class="number">0</span>], temp_xr[<span class="number">1</span>], <span class="string">'b*'</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(XLabel)):</span><br><span class="line">     plt.plot([XLabel[i],xr[i][<span class="number">0</span>]], [YLabel[i],xr[i][<span class="number">1</span>]])</span><br><span class="line">plt.axis([-<span class="number">8</span>,<span class="number">6</span>,-<span class="number">5</span>,<span class="number">5</span>])</span><br><span class="line">plt<span class="selector-class">.xlabel</span> = <span class="string">'x'</span></span><br><span class="line">plt<span class="selector-class">.ylabel</span> = <span class="string">'y'</span></span><br><span class="line">plt.show()</span><br></pre>      </td>    </tr>  </table></figure><p>本文链接: <a href="http://meng.uno/posts/6c0d033f/">http://meng.uno/posts/6c0d033f/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实验要求&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#实验要求&quot;&gt;🌊&lt;/a&gt;实验要求&lt;/h2&gt;
&lt;h3 id=&quot;实验目标&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#实验目标&quot;&gt;🌊&lt;/a&gt;实验目标&lt;/h3&gt;
&lt;p&gt;实
      
    
    </summary>
    
      <category term="机器学习" scheme="http://meng.uno/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://meng.uno/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>使用EM算法优化的GMM</title>
    <link href="http://meng.uno/posts/177fbbcc/"/>
    <id>http://meng.uno/posts/177fbbcc/</id>
    <published>2016-12-17T03:16:53.000Z</published>
    <updated>2018-02-09T10:46:20.921Z</updated>
    
    <content type="html"><![CDATA[<p>先上代码：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre>      </td>      <td class="code">        <pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib<span class="selector-class">.pyplot</span> as mat</span><br><span class="line">import matplotlib<span class="selector-class">.mlab</span> as mlab</span><br><span class="line">#EM算法</span><br><span class="line">def EM(dataSet,K):</span><br><span class="line">    (N, M) = np.shape(dataSet)</span><br><span class="line">    W = np.zeros([N, K])</span><br><span class="line">    P= N/K</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(K):</span><br><span class="line">        W[np.floor(k*P):np.floor((k+<span class="number">1</span>)*P), k] = <span class="number">1</span></span><br><span class="line">    A,M,S = Mstep(dataSet,W)</span><br><span class="line">    return W, A, M, S</span><br><span class="line">#M的跨度</span><br><span class="line">def Mstep(data,W):</span><br><span class="line">    (N, M) = np.shape(data)</span><br><span class="line">    K = np.size(W,<span class="number">1</span>) </span><br><span class="line">    Nk = np.sum(W,<span class="number">0</span>)</span><br><span class="line">    A = Nk/np.sum(Nk)</span><br><span class="line">    Mm = data<span class="selector-class">.T</span><span class="selector-class">.dot</span>(W).dot(np.diag(np.reciprocal(Nk)))</span><br><span class="line">    S = np.zeros([M,M,K])</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(K):</span><br><span class="line">        datMean = data<span class="selector-class">.T</span> - Mm[<span class="number">0</span>:,k][None]<span class="selector-class">.T</span><span class="selector-class">.dot</span>(np.ones([<span class="number">1</span>,N]))</span><br><span class="line">        S[:,:,k] = (datMean.dot(np.diag(W[<span class="number">0</span>:,k])).dot(datMean.T))/Nk[k]</span><br><span class="line">    return A,Mm,S</span><br><span class="line">#E的跨度</span><br><span class="line">def Estep(data,A,M,S):</span><br><span class="line">    N = np.size(data,<span class="number">0</span>)</span><br><span class="line">    K = np.size(A)</span><br><span class="line">    W = np.zeros([N,K])</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(K):</span><br><span class="line">        <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(N):</span><br><span class="line">            W[<span class="selector-tag">i</span>,k] = A[k]*multivariate(data[<span class="selector-tag">i</span>,:][None]<span class="selector-class">.T</span>, \</span><br><span class="line">                     M[:,k][None]<span class="selector-class">.T</span>,S[:,:,k])</span><br><span class="line">    W = W*np.reciprocal(np.sum(W,<span class="number">1</span>)[None].T)</span><br><span class="line">    return W</span><br><span class="line">def multivariate(x, m, s):</span><br><span class="line">    <span class="keyword">if</span> len(x) == len(m) and (len(x), len(x)) == s<span class="selector-class">.shape</span>:</span><br><span class="line">        det = np<span class="selector-class">.linalg</span><span class="selector-class">.det</span>(s)</span><br><span class="line">        const = 1.0/(np.math.pow((2*np.pi), float(len(x))/2) * np.math.pow(det, 1.0/2))</span><br><span class="line">        x_m = np.matrix(x - m)</span><br><span class="line">        inv_ = np<span class="selector-class">.linalg</span><span class="selector-class">.inv</span>(s)</span><br><span class="line">        result = np.math.pow(np.math.e, -0.5 * (x_m.T * inv_ * x_m))</span><br><span class="line">        return const * result</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        return -<span class="number">1</span></span><br><span class="line">#GMM主程序</span><br><span class="line">def GMM():</span><br><span class="line">    # 加载文件</span><br><span class="line">    input_file = open(<span class="string">'points.dat'</span>)</span><br><span class="line">    lines = input_file.readlines()</span><br><span class="line">    Data = np.array([line.strip().split() <span class="keyword">for</span> line <span class="keyword">in</span> lines]).astype(np.<span class="attribute">float</span>)</span><br><span class="line">    (x, y) = np.shape(Data)</span><br><span class="line">    mat.draw()</span><br><span class="line">    mat.pause(<span class="number">0.01</span>)</span><br><span class="line">    mat.subplot(<span class="number">111</span>)</span><br><span class="line">    mat.plot(x, y, <span class="string">'b*'</span>)</span><br><span class="line">    learn = Data[np<span class="selector-class">.math</span><span class="selector-class">.ceil</span>(x*<span class="number">0.8</span>):x, <span class="number">0</span>:]</span><br><span class="line">    train = Data[:np<span class="selector-class">.math</span><span class="selector-class">.floor</span>(x*<span class="number">0.8</span>), <span class="number">0</span>:]</span><br><span class="line">    trainnum = <span class="number">16</span></span><br><span class="line">    (W, Alpha, Mu, Sigma) = EM(train,trainnum)</span><br><span class="line">    m = np.arange(-<span class="number">4.0</span>, <span class="number">4.0</span>, <span class="number">0.1</span>)</span><br><span class="line">    n = np.arange(-<span class="number">4.0</span>, <span class="number">4.0</span>, <span class="number">0.1</span>)</span><br><span class="line">    ax, ay = np.meshgrid(m, n)</span><br><span class="line">    <span class="selector-tag">i</span> = <span class="number">0</span></span><br><span class="line">    prev = -<span class="number">9999</span></span><br><span class="line">    mat.clf()</span><br><span class="line">    while(True):    </span><br><span class="line">        <span class="keyword">if</span>(False):</span><br><span class="line">            SigmaSum = np.sum(Sigma,<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(trainnum):</span><br><span class="line">                Sigma[:,:,k] = SigmaSum</span><br><span class="line">        W = Estep(train,Alpha,Mu,Sigma)</span><br><span class="line">        Alpha,Mu,Sigma = Mstep(train,W)</span><br><span class="line">       # trains = logLike(train,Alpha,Mu,Sigma)</span><br><span class="line">        N,M = np.shape(train)</span><br><span class="line">        P = np.zeros([N,len(Alpha)])</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(len(Alpha)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(N):</span><br><span class="line">                P[j,k] = multivariate(train[j,:][None]<span class="selector-class">.T</span>,Mu[<span class="number">0</span>:,k][None]<span class="selector-class">.T</span>,Sigma[:,:,k])</span><br><span class="line">        trains = np.sum(np.log(P.dot(Alpha)))</span><br><span class="line">        <span class="selector-tag">i</span> = <span class="selector-tag">i</span> + <span class="number">1</span></span><br><span class="line">        #画图，训练和测试样本</span><br><span class="line">        mat.subplot(<span class="number">211</span>)</span><br><span class="line">        mat.scatter(train[<span class="number">0</span>:,<span class="number">0</span>],train[<span class="number">0</span>:,<span class="number">1</span>])</span><br><span class="line">        mat.hold(True)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>, trainnum):</span><br><span class="line">            az = mlab.bivariate_normal(ax, ay, Sigma[<span class="number">0</span>, <span class="number">0</span>, k], Sigma[<span class="number">1</span>, \</span><br><span class="line">                <span class="number">1</span>, k], Mu[<span class="number">0</span>,k], Mu[<span class="number">1</span>,k], Sigma[<span class="number">1</span>, <span class="number">0</span>, k])</span><br><span class="line">            try:</span><br><span class="line">                mat.contour(ax, ay, az)</span><br><span class="line">            except:</span><br><span class="line">                continue</span><br><span class="line">        mat.hold(False)</span><br><span class="line">        # Render these</span><br><span class="line">        mat.draw()</span><br><span class="line">        mat.pause(<span class="number">0.01</span>)</span><br><span class="line">        mat.subplot(<span class="number">212</span>)</span><br><span class="line">        mat.scatter(learn[<span class="number">0</span>:,<span class="number">0</span>],learn[<span class="number">0</span>:,<span class="number">1</span>])</span><br><span class="line">        mat.hold(True)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>, trainnum):</span><br><span class="line">            az = mlab.bivariate_normal(ax, ay, Sigma[<span class="number">0</span>, <span class="number">0</span>, k], Sigma[<span class="number">1</span>, \</span><br><span class="line">                <span class="number">1</span>, k], Mu[<span class="number">0</span>,k], Mu[<span class="number">1</span>,k], Sigma[<span class="number">1</span>, <span class="number">0</span>, k])</span><br><span class="line">            try:</span><br><span class="line">                mat.contour(ax, ay, az)</span><br><span class="line">            except:</span><br><span class="line">                continue</span><br><span class="line">        mat.hold(False)</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">150</span> or abs(trains - prev)&lt; <span class="number">0.01</span>):</span><br><span class="line">            break</span><br><span class="line">        prev = trains</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    GMM()</span><br></pre>      </td>    </tr>  </table></figure><h2 id="实验要求"><a class="header-anchor" href="#实验要求">🌊</a>实验要求</h2><h3 id="实验目标"><a class="header-anchor" href="#实验目标">🌊</a>实验目标</h3><p>实现一个混合高斯模型，并且用EM算法估计模型中的参数。</p><h3 id="实验过程"><a class="header-anchor" href="#实验过程">🌊</a>实验过程</h3><p>用混合高斯模型产生k个高斯分布的数据（其中参数自己设定），然后用你实现的EM算法估计参数，看看每次迭代后似然值变化情况，考察EM算法是否可以获得正确的结果（与你设定的结果比较）。<br> 可以UCI上找一个简单问题数据，用你实现的GMM进行聚类。</p><h2 id="算法原理"><a class="header-anchor" href="#算法原理">🌊</a>算法原理</h2><h3 id="gmm算法"><a class="header-anchor" href="#gmm算法">🌊</a>GMM算法</h3><p>高斯模型就是用高斯概率密度函数（正态分布曲线）精确地量化事物，将一个事物分解为若干的基于高斯概率密度函数（正态分布曲线）形成的模型。</p><p>对图像背景建立高斯模型的原理及过程：图像灰度直方图反映的是图像中某个灰度值出现的频次，也可以认为是图像灰度概率密度的估计。如果图像所包含的目标区域和背景区域相比比较大，且背景区域和目标区域在灰度上有一定的差异，那么该图像的灰度直方图呈现双峰-谷形状，其中一个峰对应于目标，另一个峰对应于背景的中心灰度。对于复杂的图像，尤其是医学图像，一般是多峰的。通过将直方图的多峰特性看作是多个高斯分布的叠加，可以解决图像的分割问题。 在智能监控系统中，对于运动目标的检测是中心内容，而在运动目标检测提取中，背景目标对于目标的识别和跟踪至关重要。而建模正是背景目标提取的一个重要环节。</p><p>我们首先要提起背景和前景的概念，前景是指在假设背景为静止的情况下，任何有意义的运动物体即为前景。建模的基本思想是从当前帧中提取前景，其目的是使背景更接近当前视频帧的背景。即利用当前帧和视频序列中的当前背景帧进行加权平均来更新背景,但是由于光照突变以及其他外界环境的影响，一般的建模后的背景并非十分干净清晰，而高斯混合模型是是建模最为成功的方法之一。</p><p>混合高斯模型使用K（基本为3到5个）个高斯模型来表征图像中各个像素点的特征,在新一帧图像获得后更新混合高斯模型, 用当前图像中的每个像素点与混合高斯模型匹配,如果成功则判定该点为背景点, 否则为前景点。</p><p>通观整个高斯模型，主要是有方差和均值两个参数决定，对均值和方差的学习，采取不同的学习机制,将直接影响到模型的稳定性、精确性和收敛性 。由于我们是对运动目标的背景提取建模，因此需要对高斯模型中方差和均值两个参数实时更新。为提高模型的学习能力,改进方法对均值和方差的更新采用不同的学习率;为提高在繁忙的场景下,大而慢的运动目标的检测效果,引入权值均值的概念,建立背景图像并实时更新,然后结合权值、权值均值和背景图像对像素点进行前景和背景的分类。</p><p>具体实现过程：</p><ol>  <li>为图像的每个像素点指定一个初始的均值、标准差以及权重。</li>  <li>收集N（一般取200以上，否则很难得到像样的结果）帧图像利用在线EM算法得到每个像 素点的均值、标准差以及权重。</li>  <li>从N+1帧开始检测，检测的方法：<br> 对每个像素点：    <ol>      <li>将所有的高斯核按照 ω / σ 降序排序</li>      <li>选择满足下式的前M个高斯核：M = arg min(ω / σ &gt; T)</li>      <li>如果当前像素点的像素值在中有一个满足：就可以认为其为背景点。</li>    </ol>  </li>  <li>更新背景图像，用EM算法。</li></ol><h3 id="em算法"><a class="header-anchor" href="#em算法">🌊</a>EM算法</h3><p>EM 算法是 Dempster，Laind，Rubin 于 1977 年提出的求参数极大似然估计的一种方法，它可以从非完整数据集中对参数进行 MLE 估计，是一种非常简单实用的学习算法。这种方法可以广泛地应用于处理缺损数据，截尾数据，带有噪声等所谓的不完全数据(incomplete data)。</p><p>最大期望算法经过两个步骤交替进行计算：</p><ul>  <li>第一步是计算期望（E），利用对隐藏变量的现有估计值，计算其最大似然估计值；</li>  <li>第二步是最大化（M），最大化在 E 步上求得的最大似然值来计算参数的值。</li></ul><p>M 步上找到的参数估计值被用于下一个 E 步计算中，这个过程不断交替进行。</p><p>通过交替使用这两个步骤，EM算法逐步改进模型的参数，使参数和训练样本的似然概率逐渐增大，最后终止于一个极大点。直观地理解EM算法，它也可被看作为一个逐次逼近算法：事先并不知道模型的参数，可以随机的选择一套参数或者事先粗略地给定某个初始参数λ0 ，确定出对应于这组参数的最可能的状态，计算每个训练样本的可能结果的概率，在当前的状态下再由样本对参数修正，重新估计参数λ，并在新的参数下重新确定模型的状态，这样，通过多次的迭代，循环直至某个收敛条件满足为止，就可以使得模型的参数逐渐逼近真实参数。</p><p>具体实现步骤：</p><ul>  <li>给出种类数k,初始化每一类高斯分布的均值μk，方差∑k以及每一类的概率πk；</li>  <li>执行EM；</li>  <li>计算似然，如果没有达到预期效果，则返回第2步；</li>  <li>计算每个数据点对于k个高斯分布的似然，选择似然最大的一类作为数据的最终分类。</li></ul><p>其他的混合模型，例如朴素贝叶斯混合模型也是可以使用EM算法推出使用的，这一算法虽然在GMM中作为参数使用，但是其仍然可以单独发挥作用。我觉得EM算法就是相互迭代（毕竟其由E和M两部分组成嘛），求出一个稳定值，而这种相互迭代的方法用的范围挺广的，例如混合模型，K-means等都需要使用。</p><h3 id="与k-means的区别"><a class="header-anchor" href="#与k-means的区别">🌊</a>与K-means的区别</h3><p>在上文我也已经提到了EM算法可以用在K-means等其他需要迭代的方法上的事实，其实，我觉得GMM 和 K-means 很像，只不过后者要简单，而且相对来说实现并不是很高效。不过 GMM 是学习出一些概率密度函数来（所以 GMM 除了用在 clustering 上之外，还经常被用于 density estimation ），简单地说，K-means 的结果是每个数据点被 assign 到其中某一个 cluster 了，而 GMM 则给出这些数据点被 assign 到每个 cluster 的概率，又称作  soft assignment。</p><h2 id="实验环境"><a class="header-anchor" href="#实验环境">🌊</a>实验环境</h2><p>Spyder 作为Python开发的集成开发环境；<br> 编程语言：Python 3.5；<br> 操作系统：macOS Sierra。</p><h2 id="小结"><a class="header-anchor" href="#小结">🌊</a>小结</h2><p>GMM算法作为EM算法族的一个例子，它指定了各个参与杂合的分布都是高斯分布，即分布参数表现为均值Mu和方差Sigma。通过EM算法作为计算使用的框架，迭代地算出各个高斯分布的参数。</p><h3 id="gmm与k-means的思考"><a class="header-anchor" href="#gmm与k-means的思考">🌊</a>GMM与K-means的思考</h3><p>提到GMM不得不提K-means，总结了网上的资料以及老师上课的课件，我将两者的区别与联系陈述如下：</p><ul>  <li>两者的联系:</li></ul><p>都是迭代执行的算法，且迭代的策略也相同：算法开始执行时先对需要计算的参数赋初值，然后交替执行两个步骤，一个步骤是对数据的估计（k-means是估计每个点所属簇；GMM是计算隐含变量的期望）；第二步是用上一步算出的估计值重新计算参数值，更新目标参数（k-means是计算簇心位置；GMM是计算各个高斯分布的中心位置和协方差矩阵）</p><ul>  <li>两者的区别:</li></ul><p>首先，两者需要计算的参数不同：K-means是簇心位置；GMM是各个高斯分布的参数；其次，两者计算目标参数的方法不同：K-means是计算当前簇中所有元素的位置的均值；GMM是基于概率的算法，是通过计算似然函数的最大值实现分布参数的求解的。</p><h3 id="关于gmm引发的过拟合的思考"><a class="header-anchor" href="#关于gmm引发的过拟合的思考">🌊</a>关于GMM引发的过拟合的思考</h3><p>首先我想提到这样的一个“人辨认其他生物（例如鱼）”的例子。当我们被告知水里游的那个生物是鱼之后，我们会使用“在同样的地方生活的是同一种东西”这类似的假设，归纳出“在水里游的都是鱼”这样一个结论。当然这个过程是完全“本能”的，如果不仔细去想，我们也不会了解自己是怎样“认识鱼”的。另一个值得注意的地方是这样的假设并不总是完全正确的，甚至可以说总是会有这样那样的缺陷的，因为我们有可能会把虾、龟、甚至是潜水员当做鱼。也许你觉得可以通过修改前提假设来解决这个问题，例如，基于“生活在同样的地方并且穿着同样衣服的是同一种东西”这个假设，你得出结论：在水里有并且身上长有鳞片的是鱼。可是这样还是有问题，因为有些没有长鳞片的鱼现在又被你排除在外了。</p><p>机器在识别方面面临着和人一样的问题，在机器学习中，一个学习算法也会有一个前提假设，这里被称作“归纳偏执”。例如线性回归，目的是要找一个函数尽可能好地拟合给定的数据点，它的归纳偏执就是“满足要求的函数必须是线性函数”。一个没有归纳偏执的学习算法从某种意义上来说毫无用处，就像一个完全没有归纳能力的人一样，在第一次看到鱼的时候有人告诉他那是鱼，下次看到另一条鱼了，他并不知道那也是鱼，因为两条鱼总有一些地方不一样的，或者就算是同一条鱼，在河里不同的地方看到，或者只是看到的时间不一样，也会被他认为是不同的，因为他无法归纳，无法提取主要矛盾、忽略次要因素，只好要求所有的条件都完全一样──然而哲学家已经告诉过我们了：世界上不会有任何样东西是完全一样的，所以这个人即使是有无比强悍的记忆力，也绝学不到任何一点知识。</p><p>于是有了上面的铺垫，我们就可以引出论题——“过拟合 ”，就像前面的回归的问题，如果去掉“线性函数”这个归纳偏执，因为对于 N 个点，我们总是可以构造一个 N-1 次多项式函数，让它完美地穿过所有的这 N 个点，或者如果我用任何大于 N-1 次的多项式函数的话，我们甚至可以构造出无穷多个满足条件的函数出来。如果假定特定领域里的问题所给定的数据个数总是有个上限的话，我可以取一个足够大的 N ，从而得到一个（或者无穷多个）“超级函数”，能够拟合这个领域内所有的问题。</p><p>没有归纳偏执或者归纳偏执太宽泛会导致过拟合 ，然而另一个极端──限制过大的归纳偏执也是有问题的：如果数据本身并不是线性的，强行用线性函数去做回归通常并不能得到好结果（例如我在“实验一：多项式拟合曲线”中就做过相应的测试）。难点正在于在这之间寻找一个临界点。不过我们在这里相对于机器来说有一个很大的优势：人通常不会孤立地用某一个独立的系统和模型去处理问题，一个人每天都会从各个来源获取大量的信息，并且通过各种手段进行整合处理，归纳所得的所有知识最终得以统一地存储起来，并能有机地组合起来去解决特定的问题。</p><p>以上就是我关于“过拟合”的一点不全面的思考！</p><p>本文链接: <a href="http://meng.uno/posts/177fbbcc/">http://meng.uno/posts/177fbbcc/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&quot;gutter&quot;&gt;
        &lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="机器学习" scheme="http://meng.uno/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://meng.uno/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Android新闻软件编写</title>
    <link href="http://meng.uno/posts/8fb3f6d8/"/>
    <id>http://meng.uno/posts/8fb3f6d8/</id>
    <published>2016-12-16T07:01:14.000Z</published>
    <updated>2018-02-09T10:46:20.938Z</updated>
    
    <content type="html"><![CDATA[<p>当我开始学安卓开发时，我发现网上最多的教程就是关于Android上的新闻客户端开发的（而且课时特别长），我本人觉得完全是那些上传网课的人想拉时长牟利，在写完listview之后，因为我们的《软设》项目需要，我也来做做“新闻页”，我只写显示过程（不涉及爬虫），只是为了记录下开发过程供初学者及日后自己回顾。<br> 首先，我在values/string目录加上如下条目，用作显示（内容无关）：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;string name="title"&gt;是上帝除四害是的次数不多是彻底那就是地产表示比不对是不死都今?&lt;/string&gt;</span><br><span class="line">   &lt;string name=<span class="string">"text"</span>&gt;我是测手术储备货币结算你说的内存金士顿内存就剧场那就看到手残你从从今年刷卡才能加内存显卡才能收到你今年的你朝鲜才能常出现从侠客行朝鲜&lt;/string&gt;</span><br><span class="line">   &lt;string-array name=<span class="string">"text_arr"</span>&gt;</span><br><span class="line">       &lt;item&gt;bids比貂蝉死不打算比赛的buds不v电话苏帮你吧报错还加班猝死地产表示出版社u白崇禧必须&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;但是不撒手撒就行字数限制到<span class="number">6</span>个字，多的用省略号，是设置什么属学校决定停止晚自习，我和同学一起回荚冬</span><br><span class="line">              我是在那次孝雅之星的事迹报告会上认识她的。当轮到她上场的时候，主持人这样说道：“她是一个外表刚强，内心柔弱的人。”话音刚落，她班上的同学一阵哄堂大笑。</span><br><span class="line">           我用疑惑的眼神看了看身旁的同学，她告诉我，在她们班上谁都知道她是一个标准的女汉子。她的话勾起了我的好奇心，使我有了想听听她的故事的欲望。</span><br><span class="line">              她步履坚定的走上了演讲台，先是向我们深深地鞠了一躬，便开始娓娓道来她的事迹。</span><br><span class="line">              她的父母都在外打拼，忙于事业，所以很少有空去照顾她，所以家中的一切只能由她一人包办。后来，她又有了一个妹妹，致使她身上的担子又加重了许多，但她依然十分</span><br><span class="line">           坚强的承担这一切。她说妹妹的到来对于她来说像一个天使一样美好，而并不是觉得她是一个负担。当我们回到家中扑在父母怀里撒娇时，她在床头哄着妹妹入睡；当我作文网</span><br><span class="line">           http:<span class="comment">//wwW.zuoWen8.Com/们安稳的进入梦乡时，她却还在奋笔疾书。夜的黑暗与漫长，只有她才知道；思念的感受有多浓稠，只有她才知道；内心的压抑有多难受，只有她才知</span></span><br><span class="line">           道。</span><br><span class="line">              当她说到妹妹因调皮将很烫的饭菜洒到她的手臂上，她还得继续给妹妹喂饭时，当她提及妹妹做坏事后她忍气吞声的到别人家中道歉时，她哽咽了，将头扭到一边独自抹眼泪。</span><br><span class="line">           我们沉默了，低头不语。忧伤的气息迅速在全场蔓延，每个人的心都在和她共鸣着，有好几次，她正准备开口时，却都卡在了喉咙，全场为她响起了雷鸣般经久不息的掌声。</span><br><span class="line">       &lt;/item&gt;</span><br><span class="line">       &lt;item&gt;看到他我想到了爸爸，幸好他今天不上班，不用冒那么大的雪，假如哪个人是我爸爸，我多么希看有一个好心人上前伸出一只手，帮他一把。假如那是你，&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;我停了车子，想往帮助他，可我也象那些来来往往的行人一样，脚步并没有动，的确有很多人同情他，同情也的确对他没用，他还是站不起来，一遍一遍看他起来又摔倒，只好转过头，</span><br><span class="line">           不看他，疼痛无奈，一个中年男子的窘态在众人眼前暴露无遗，这时的他没有一点男子汉的心胸。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;走到一个小岔路口时，我看到路的另一边一个中年男子坐在地上，他穿着青色衣服，双手扶地，似乎挣扎着坐起来，一次又一次尝试着。旁边躺着他的尽看的大梁自行车，等待着主人扶</span><br><span class="line">           起它，在这路上最难过的就是他们了吧！也只有他们可以相互安慰。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;春天，春姑娘带来了蒙蒙细雨和柔和的春风，并把它们化作一只大画笔，把绿色涂在草坪上。这时，无数只小燕子从远方飞来，在草坪上飞来飞去。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;夏天，草坪旁的花坛里，月季花欣然怒放，引来了勤劳的小蜜蜂和翩翩起舞的蝴蝶，热闹极了。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;冬天，雪花落到草坪上，给草坪盖上了一层厚厚的棉被，来年，小草更加茁壮成长。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;草坪就像一个氧气袋，它通过光合作用，净化空气，美化环境。我们要爱护学校的草坪。&lt;/item&gt;</span><br><span class="line">   &lt;/string-array&gt;</span><br><span class="line">   &lt;string-array name=<span class="string">"title_arr"</span>&gt;</span><br><span class="line">       &lt;item&gt;死地产表示出版社u白崇禧必须&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;停止晚自习，我和同学一起回荚冬&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;假如哪个人是我爸爸，我多么希看有一个好心人上前伸出一只手，帮他一把。假如那是你，&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;我停了的行人一样，脚步并没有动，的确有很多人同情他，同情也的确对他没用，他还是站不起来，一遍一遍看他起来又摔倒，只好转过头，他没有一点男子汉的心胸。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;他穿着青色衣服，双手扶地，似乎挣扎着坐起来，一次又一次尝试着。旁边躺着他的尽看的大梁自行车，等待着主人扶&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;春天。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;夏天极了。&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;冬天，雪花落到&lt;/item&gt;</span><br><span class="line">       &lt;item&gt;草坪就像的草坪。&lt;/item&gt;</span><br><span class="line">   &lt;/string-array&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>接着编写显示主界面：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre>      </td>      <td class="code">        <pre><span class="line">public class MainActivity extends AppCompatActivity&#123;</span><br><span class="line">    private ListView listview;</span><br><span class="line">    <span class="comment">//private ArrayAdapter&lt;String&gt;arr_adapter;</span></span><br><span class="line">    private SimpleAdapter simp_Adapter;</span><br><span class="line">    private List&lt;Map&lt;String,String&gt;&gt;datalist;</span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        listview = (ListView)findViewById(R.id.listview);</span><br><span class="line">        datalist = new ArrayList&lt;Map&lt;String,String&gt;&gt;();</span><br><span class="line">        simp_Adapter = new SimpleAdapter(this,getData(),R<span class="selector-class">.layout</span><span class="selector-class">.item</span>,</span><br><span class="line">                new String[]&#123;"title","text"&#125;,new int[]&#123;R.id.title,R.id.text&#125;);</span><br><span class="line">        listview.setAdapter(simp_Adapter);</span><br><span class="line">    &#125;</span><br><span class="line">    private List&lt;Map&lt;String,String&gt;&gt; getData()&#123;</span><br><span class="line">        String[] data_text = getResources().getStringArray(R.array.text_arr);</span><br><span class="line">        String[] data_title = getResources().getStringArray(R.array.title_arr);</span><br><span class="line">        for(int i=0;i&lt;data_text.length;i++)&#123;</span><br><span class="line">            Map&lt;String,String&gt;map = new HashMap&lt;String,String&gt;();</span><br><span class="line">            map.put("title",data_title[i]);</span><br><span class="line">            map.put("text",data_text[i]);</span><br><span class="line">            datalist.add(map);</span><br><span class="line">        &#125;</span><br><span class="line">        return datalist;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><p>其对应的activity_main.xml文件为：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:id=<span class="string">"@+id/activity_main"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    tools:context=<span class="string">"com.example.lpf.test.MainActivity"</span>&gt;</span><br><span class="line">    &lt;ListView</span><br><span class="line">        android:id=<span class="string">"@+id/listview"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">        android:layout_alignParentStart=<span class="string">"true"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"@color/bg"</span></span><br><span class="line">        android:divider=<span class="string">"@color/item_item"</span></span><br><span class="line">        android:dividerHeight=<span class="string">"10dp"</span>/&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>再然后，编写点击后的后台跳转逻辑：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre>      </td>      <td class="code">        <pre><span class="line">public class ShowActivity extends AppCompatActivity &#123;</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_show);</span><br><span class="line">        Bundle bundle = getIntent().getExtras();</span><br><span class="line">        String title = bundle.getString("title");</span><br><span class="line">        String text = bundle.getString("text");</span><br><span class="line">        TextView title_view = (TextView) findViewById(R.id.title);</span><br><span class="line">        title_view.setText(title);</span><br><span class="line">        TextView text_view = (TextView) findViewById(R.id.text);</span><br><span class="line">        text_view.setMovementMethod(ScrollingMovementMethod.getInstance());</span><br><span class="line">        text_view.setText(text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><p>对应的activity_show.xml文件如下：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span>&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:id=<span class="string">"@+id/title"</span></span><br><span class="line">        android:text=<span class="string">"@string/title"</span></span><br><span class="line">        android:textSize=<span class="string">"22sp"</span></span><br><span class="line">        android:typeface=<span class="string">"monospace"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"@color/itembg"</span>/&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:id=<span class="string">"@+id/text"</span></span><br><span class="line">        android:textSize=<span class="string">"18sp"</span></span><br><span class="line">        android:textColor=<span class="string">"@color/textbg"</span></span><br><span class="line">        android:typeface=<span class="string">"normal"</span></span><br><span class="line">        android:scrollbars=<span class="string">"vertical"</span></span><br><span class="line">        android:text=<span class="string">"@string/text"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>最后就是负责点击跳转的任务的后台程序了：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre>      </td>      <td class="code">        <pre><span class="line">public class TestActivity extends ListActivity &#123;</span><br><span class="line">    String[] data = &#123;"北京","西安","广州","上海"&#125;;</span><br><span class="line">    ListView lstview;</span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        lstview = (ListView)findViewById(R.id.listview);</span><br><span class="line">        lstview.setOnItemClickListener(new AdapterView.OnItemClickListener()&#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123;</span><br><span class="line">                String s = data[<span class="attribute">position</span>];    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(</span><br><span class="line">                this,</span><br><span class="line">                R<span class="selector-class">.layout</span><span class="selector-class">.item</span>,</span><br><span class="line">                R<span class="selector-class">.id</span><span class="selector-class">.listview</span>,</span><br><span class="line">                data</span><br><span class="line">        );</span><br><span class="line">        lstview.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><p>附加一个item.xml用于接收显示：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:<span class="attribute">background</span>=<span class="string">"@drawable/white_bg"</span>&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:id=<span class="string">"@+id/title"</span></span><br><span class="line">        android:text=<span class="string">"@string/title"</span></span><br><span class="line">        android:textSize=<span class="string">"20sp"</span></span><br><span class="line">        android:typeface=<span class="string">"monospace"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"@color/itembg"</span>/&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:id=<span class="string">"@+id/text"</span></span><br><span class="line">        android:textSize=<span class="string">"15sp"</span></span><br><span class="line">        android:textColor=<span class="string">"@color/textbg"</span></span><br><span class="line">        android:typeface=<span class="string">"normal"</span></span><br><span class="line">        android:maxLines=<span class="string">"3"</span></span><br><span class="line">        android:ellipsize=<span class="string">"end"</span></span><br><span class="line">        android:text=<span class="string">"@string/text"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>至此一个新闻客户端基本框架就已经编写完毕！</p><p>本文链接: <a href="http://meng.uno/posts/8fb3f6d8/">http://meng.uno/posts/8fb3f6d8/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当我开始学安卓开发时，我发现网上最多的教程就是关于Android上的新闻客户端开发的（而且课时特别长），我本人觉得完全是那些上传网课的人想拉时长牟利，在写完listview之后，因为我们的《软设》项目需要，我也来做做“新闻页”，我只写显示过程（不涉及爬虫），只是为了记录下开
      
    
    </summary>
    
      <category term="Android" scheme="http://meng.uno/categories/Android/"/>
    
    
      <category term="Android" scheme="http://meng.uno/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Linux 0.11启动引导</title>
    <link href="http://meng.uno/posts/6c138ff9/"/>
    <id>http://meng.uno/posts/6c138ff9/</id>
    <published>2016-12-16T06:52:23.000Z</published>
    <updated>2018-02-09T10:46:20.931Z</updated>
    
    <content type="html"><![CDATA[<p>Linux引导启动程序程序在boot目录下，有bootset.s, head.s和setup.s（编译后），其中：</p><h2 id="bootset-s"><a class="header-anchor" href="#bootset-s">🌊</a>bootset.s</h2><p>系统启动时首先是进入实模式，从地址0xffff0（这地址映射的rom-bios在内存的地址）处开始执行bios代码，然后执行系统检测（也就是自检过程）,然后初始化实模式的中断向量表(实模式中断向量在内存物理地址0处)。然后将启动设备的第一个扇区（512字节，也就是bootset.s编译完成的内容）内容读取到内存0x7c00(31kB)处，并且跳转到这里。<br> 跳转到bootset.s后，bootset.s主要做如下工作：  <br> bootset.s在最前面的几句代码先将自己移动到内存0x90000（576kB）处；  <br> bootset.s将启动设备第2个扇区到第五个扇区内容（4个扇区里面存放的是setup.s的内容）读取到内存0x90200处，也就是bootset.s后面；  <br> 将内核其他模块读取到0x10000（64KB）处，读取的大小为192KB，对于当时的内核来说确实是足够大了；  <br> 在bootset.s偏移508处定义了根文件系统的设备号，并且根据编译选项进行了赋值操代码默认启动驱动器是软盘a，然后就是bootset.s,setup.s,和内核镜像都成放在软盘a中;</p><h2 id="setup-s"><a class="header-anchor" href="#setup-s">🌊</a>setup.s</h2><p>将系统的一些参数存放在0x90000处,覆盖之前的bootset.s,参数主要包括，内存大小，硬盘参数，显存的参数信息以及根文件系统的设备号;<br> 定义了GDT表，最后加载了gdtr和ldtr，最后跳到保护模式GDT表定义在setup.s,也就是在0x90200的那段内存中，LDT还没有定义。</p><h2 id="head-s"><a class="header-anchor" href="#head-s">🌊</a>head.s</h2><p>其被编译到内核镜像中。重新定义了GDT表(目前就一个第二个段描述符有效)和并定义LDT表（表中中断处理程序目前还是指向一个默认的处理程序），并加载相应的寄存器；<br> 内存开始处设置页目录表，一共有4个叶目录，初始化页目录，然后开启分页，最后跳到主函数main()。</p><p>至此，系统启动引导完成。</p><p>本文链接: <a href="http://meng.uno/posts/6c138ff9/">http://meng.uno/posts/6c138ff9/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Linux引导启动程序程序在boot目录下，有bootset.s, head.s和setup.s（编译后），其中：&lt;/p&gt;
&lt;h2 id=&quot;bootset-s&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#bootset-s&quot;&gt;🌊&lt;/a&gt;bootset
      
    
    </summary>
    
      <category term="操作系统" scheme="http://meng.uno/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://meng.uno/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Android的ListView的使用</title>
    <link href="http://meng.uno/posts/5d6c9819/"/>
    <id>http://meng.uno/posts/5d6c9819/</id>
    <published>2016-12-15T05:58:11.000Z</published>
    <updated>2018-02-09T10:46:20.916Z</updated>
    
    <content type="html"><![CDATA[<p>可能我们在手机APP上使用的最多的视图就是列表了，那么Android列表（ListView）该怎么使用呢？<br> 首先还是显示界面activity_main.xml:</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:id=<span class="string">"@+id/activity_main"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    tools:context=<span class="string">"com.example.lpf.test.MainActivity"</span>&gt;</span><br><span class="line">    &lt;ListView</span><br><span class="line">        android:id=<span class="string">"@+id/listview"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">        android:layout_alignParentStart=<span class="string">"true"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"@color/bg"</span></span><br><span class="line">        android:divider=<span class="string">"@color/item_item"</span></span><br><span class="line">        android:dividerHeight=<span class="string">"10dp"</span>/&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>之后是其对应的MainActivity.java文件：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre>      </td>      <td class="code">        <pre><span class="line">public class MainActivity extends AppCompatActivity&#123;</span><br><span class="line">    private ListView listview;</span><br><span class="line">    <span class="comment">//private ArrayAdapter&lt;String&gt;arr_adapter;</span></span><br><span class="line">    private SimpleAdapter simp_Adapter;</span><br><span class="line">    private List&lt;Map&lt;String,String&gt;&gt;datalist;</span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        listview = (ListView)findViewById(R.id.listview);</span><br><span class="line">        datalist = new ArrayList&lt;Map&lt;String,String&gt;&gt;();</span><br><span class="line">        simp_Adapter = new SimpleAdapter(this,getData(),R<span class="selector-class">.layout</span><span class="selector-class">.item</span>,</span><br><span class="line">                new String[]&#123;"title","text"&#125;,new int[]&#123;R.id.title,R.id.text&#125;);</span><br><span class="line">        listview.setAdapter(simp_Adapter);</span><br><span class="line">    &#125;</span><br><span class="line">    private List&lt;Map&lt;String,String&gt;&gt; getData()&#123;</span><br><span class="line">        String[] data_text = getResources().getStringArray(R.array.text_arr);</span><br><span class="line">        String[] data_title = getResources().getStringArray(R.array.title_arr);</span><br><span class="line">        for(int i=0;i&lt;data_text.length;i++)&#123;</span><br><span class="line">            Map&lt;String,String&gt;map = new HashMap&lt;String,String&gt;();</span><br><span class="line">            map.put("title",data_title[i]);</span><br><span class="line">            map.put("text",data_text[i]);</span><br><span class="line">            datalist.add(map);</span><br><span class="line">        &#125;</span><br><span class="line">        return datalist;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><p>其他文件保持不变即可。<br> 至此，一个Android列表程序就实现了。</p><p>本文链接: <a href="http://meng.uno/posts/5d6c9819/">http://meng.uno/posts/5d6c9819/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可能我们在手机APP上使用的最多的视图就是列表了，那么Android列表（ListView）该怎么使用呢？&lt;br&gt; 首先还是显示界面activity_main.xml:
&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;
  &lt;table&gt;
   
      
    
    </summary>
    
      <category term="Android" scheme="http://meng.uno/categories/Android/"/>
    
    
      <category term="Android" scheme="http://meng.uno/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android实现输入框回车输入</title>
    <link href="http://meng.uno/posts/e60b1ba5/"/>
    <id>http://meng.uno/posts/e60b1ba5/</id>
    <published>2016-12-15T05:22:51.000Z</published>
    <updated>2018-02-09T10:46:20.915Z</updated>
    
    <content type="html"><![CDATA[<p>用惯了iOS的各位在开发安卓程序或者使用安卓手机时，都会遇到这样一个问题：原本在iOS上都是回车输入，而到了Android上却需要点击按钮完成输入（对比两个系统上的QQ就发现了）。我一直在使用iOS系统，因为《软设》才着手Android开发，所以我就想能不能像iOS上的那样实现一个输入框+回车符完成输入呢？经过我查找资料，发现确实可以：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:weightSum=<span class="string">"1"</span>&gt;</span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">"@+id/edit_message"</span></span><br><span class="line">        android:layout_margin=<span class="string">"30dp"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"80dp"</span></span><br><span class="line">        android:hint=<span class="string">"请输入文本信息 ..."</span></span><br><span class="line">        android:imeOptions=<span class="string">"actionSearch"</span></span><br><span class="line">        android:singleLine=<span class="string">"true"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>在EditText中加入了imeOptions就可以将回车符转变成各种各样的功能：<br> actionDone——回车符–&gt;完成  <br> actionSend——回车符–&gt;发送  <br> actionGo——回车符–&gt;前进  <br> actionNext——回车符–&gt;下一项  <br> actionNone——回车符–&gt;无动作  <br> actionPrevious——回车符–&gt;上一项  <br> actionSearch——回车符–&gt;搜索  <br> actionUnspecified——回车符–&gt;未指定  <br> actionSend——回车符–&gt;发送  <br> 又查阅资料发现：ime是Input Method Editors的缩写，也就是输入法编辑器，原来如此，不过想使用这个属性，必须加上android:inputType 或者 android:singleline=”true”<br> 至此，就完成了Android回车符向iOS的转化！</p><p>本文链接: <a href="http://meng.uno/posts/e60b1ba5/">http://meng.uno/posts/e60b1ba5/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用惯了iOS的各位在开发安卓程序或者使用安卓手机时，都会遇到这样一个问题：原本在iOS上都是回车输入，而到了Android上却需要点击按钮完成输入（对比两个系统上的QQ就发现了）。我一直在使用iOS系统，因为《软设》才着手Android开发，所以我就想能不能像iOS上的那样
      
    
    </summary>
    
      <category term="Android" scheme="http://meng.uno/categories/Android/"/>
    
    
      <category term="Android" scheme="http://meng.uno/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android页面跳转</title>
    <link href="http://meng.uno/posts/1da18548/"/>
    <id>http://meng.uno/posts/1da18548/</id>
    <published>2016-12-15T04:46:49.000Z</published>
    <updated>2018-02-09T10:46:20.917Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情提要"><a class="header-anchor" href="#前情提要">🌊</a>前情提要</h2><p>开发安卓单页面程序久了，必然会思考怎么开发像现在一般Android应用程序那样的多页面（指页面有跳转）程序，我也是在搜索了其他牛人的（海量）博客之后，才总结出如下的这点精华步骤（又要感慨一下国内搜索引擎之渣）！</p><h2 id="编写androidmanifest-xml"><a class="header-anchor" href="#编写androidmanifest-xml">🌊</a>编写AndroidManifest.xml</h2><p>首先，我们要确定我们需要怎样的跳转，既然跳转，无非就是自动跳转或者点击按钮，无论哪种，首先我们必须有两个界面（至少），所以在AndroidManifest.xml中，我们需要这样写：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;manifest xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    package=<span class="string">"uno.meng.download"</span>&gt;</span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=<span class="string">"true"</span></span><br><span class="line">        android:<span class="attribute">icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span><br><span class="line">        android:theme=<span class="string">"@style/AppTheme"</span>&gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=<span class="string">".MainActivity"</span></span><br><span class="line">           android:label=<span class="string">"@string/app_name"</span>&gt;</span><br><span class="line">            &lt;intent-<span class="attribute">filter</span>&gt;</span><br><span class="line">                &lt;action android:name=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span><br><span class="line">                &lt;category android:name=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span><br><span class="line">            &lt;/intent-<span class="attribute">filter</span>&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=<span class="string">".ResultActivity"</span></span><br><span class="line">            android:label=<span class="string">"@string/comeback"</span></span><br><span class="line">            android:parentActivityName=<span class="string">".MainActivity"</span> &gt;</span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=<span class="string">"android.support.PARENT_ACTIVITY"</span></span><br><span class="line">                android:value=<span class="string">".MainActivity"</span>/&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line">&lt;/manifest&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>其中，每个  <activity>对应一个界面，从代码中可见，我将后一个页面加了一个返回前一个页面的“返回符”。</activity></p><h2 id="编写跳转前界面search-xml"><a class="header-anchor" href="#编写跳转前界面search-xml">🌊</a>编写跳转前界面search.xml</h2><p>由于我在此将介绍怎么使用按钮跳转（带输入），所以直接在主界面search.xml（名称随意）中声明这两个组件（按钮，输入框）：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:weightSum=<span class="string">"1"</span>&gt;</span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:id=<span class="string">"@+id/edit_message"</span></span><br><span class="line">        android:layout_margin=<span class="string">"30dp"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"80dp"</span></span><br><span class="line">        android:hint=<span class="string">"请输入文本信息 ..."</span>/&gt;</span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">"@+id/button"</span></span><br><span class="line">        android:text=<span class="string">"点击提交 "</span></span><br><span class="line">        android:layout_margin=<span class="string">"100dp"</span></span><br><span class="line">        android:layout_width=<span class="string">"127dp"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:onClick=<span class="string">"sendMessage"</span> /&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>可见，我对按钮加了一个onClick事件。</p><h2 id="编写对应的mainactivity-java"><a class="header-anchor" href="#编写对应的mainactivity-java">🌊</a>编写对应的MainActivity.java</h2><p>在search.xml对应的MainActivity.java文件中我们写好onCreate方法（每个文件都会有）以及sendMessage方法：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre>      </td>      <td class="code">        <pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    public final static String EXTRA_MESSAGE = "uno.meng.download.MESSAGE";</span><br><span class="line">    public void sendMessage()&#123;</span><br><span class="line">        EditText editText = (EditText)findViewById(R.id.edit_message);</span><br><span class="line">        String message = editText.getText().toString();</span><br><span class="line">        Intent intent = new Intent(this, ResultActivity.class);</span><br><span class="line">        intent.putExtra(EXTRA_MESSAGE,message);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState)&#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.search);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="编写接收界面result-xml"><a class="header-anchor" href="#编写接收界面result-xml">🌊</a>编写接收界面result.xml</h2><p>然后到result.xml接收（我用的一个框来接收）：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:weightSum=<span class="string">"1"</span>&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_margin=<span class="string">"30dp"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"80dp"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="编写接收对应的resultactivity-java"><a class="header-anchor" href="#编写接收对应的resultactivity-java">🌊</a>编写接收对应的ResultActivity.java</h2><p>编写对应的ResultActivity.java文件，<br> 将从MainActivity.java接收来的文字打印到result.xml的框中：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre>      </td>      <td class="code">        <pre><span class="line">public class ResultActivity extends AppCompatActivity&#123;</span><br><span class="line">    private Intent intent;</span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.result);</span><br><span class="line">        intent = getIntent();</span><br><span class="line">        String message = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);</span><br><span class="line">        System.out.println(message);</span><br><span class="line">       TextView textview = new TextView(this);</span><br><span class="line">       textview.setTextSize(100);</span><br><span class="line">       textview.setText(message);</span><br><span class="line">       setContentView(textview);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><p>到此为止，已经完成了Android页面跳转！</p><p>本文链接: <a href="http://meng.uno/posts/1da18548/">http://meng.uno/posts/1da18548/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前情提要&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#前情提要&quot;&gt;🌊&lt;/a&gt;前情提要&lt;/h2&gt;
&lt;p&gt;开发安卓单页面程序久了，必然会思考怎么开发像现在一般Android应用程序那样的多页面（指页面有跳转）程序，我也是在搜索了其他牛人的（海量
      
    
    </summary>
    
      <category term="Android" scheme="http://meng.uno/categories/Android/"/>
    
    
      <category term="Android" scheme="http://meng.uno/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>表格搜索</title>
    <link href="http://meng.uno/posts/49d54823/"/>
    <id>http://meng.uno/posts/49d54823/</id>
    <published>2016-12-13T04:29:32.000Z</published>
    <updated>2018-02-09T10:46:20.941Z</updated>
    
    <content type="html"><![CDATA[<p>虽然表格的排列相当困难，但表格的搜索却非常容易。增加一个搜索输入，如果那里的值匹配到了任意一行的文本，则显示该行，并隐藏其他所有的行。使用jQuery来实现就像下面这么简单：</p><figure class="highlight">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>      </td>      <td class="code">        <pre><span class="line">var allRows = $("tr");</span><br><span class="line">$(<span class="string">"input#search"</span>).on(<span class="string">"keydown keyup"</span>, function() &#123;</span><br><span class="line">  allRows.hide();</span><br><span class="line">  $("tr:contains('" + $(this).val() + "')").show();</span><br><span class="line">&#125;);</span><br></pre>      </td>    </tr>  </table></figure><p>没有看错，就是这么简单，如果是在实际应用中，可以这样来写：<br> 先声明一个按钮：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;<span class="selector-tag">input</span> type=<span class="string">"search"</span> id=<span class="string">"search"</span> placeholder=<span class="string">"请输入内容……"</span>&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>在input框之后加入以下JavaScript代码：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">// Quick Table Search</span></span><br><span class="line">$(<span class="string">'#search'</span>).keyup(function() &#123;</span><br><span class="line">  var regex = new RegExp($('#search').val(), "i");</span><br><span class="line">  var rows = $('table tr:gt(0)');</span><br><span class="line">  rows.each(function (index) &#123;</span><br><span class="line">    title = $(this).children(<span class="string">"#title"</span>).html()</span><br><span class="line">    <span class="keyword">if</span> (title.search(regex) != -<span class="number">1</span>) &#123;</span><br><span class="line">      $(this).show();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(this).hide();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>完美运行有木有！！！</p><p>本文链接: <a href="http://meng.uno/posts/49d54823/">http://meng.uno/posts/49d54823/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然表格的排列相当困难，但表格的搜索却非常容易。增加一个搜索输入，如果那里的值匹配到了任意一行的文本，则显示该行，并隐藏其他所有的行。使用jQuery来实现就像下面这么简单：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      
    
    </summary>
    
      <category term="软件工程" scheme="http://meng.uno/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="软件工程" scheme="http://meng.uno/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>使用JavaScript将页面导出为图片</title>
    <link href="http://meng.uno/posts/f03eda59/"/>
    <id>http://meng.uno/posts/f03eda59/</id>
    <published>2016-12-13T04:20:18.000Z</published>
    <updated>2018-02-09T10:46:20.919Z</updated>
    
    <content type="html"><![CDATA[<p>昨天心血来潮，突然想将我们组开发的网站上的“导出Excel”功能做一点拓展，于是就想能不能直接将网页表格导出为图片！<br> 在我的不懈搜索后（搜索过程中绝大部分博客上的博文要么相互抄袭要么没什么屁用），终于得到了“canvas2image.js”这个神奇的JavaScript脚本，具体使用办法见如下代码：</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre>      </td>      <td class="code">        <pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;script src=<span class="string">"canvas2image.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;<span class="selector-tag">canvas</span>  id=<span class="string">"cvs"</span>&gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;<span class="selector-tag">button</span> id=<span class="string">"save"</span>&gt;save&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="selector-tag">var</span> <span class="selector-tag">canvas</span>, ctx, bMouseIsDown = false, iLastX, iLastY,</span><br><span class="line">        <span class="variable">$save</span>, <span class="variable">$imgs</span>,</span><br><span class="line">        <span class="variable">$convert</span>, <span class="variable">$imgW</span>, <span class="variable">$imgH</span>,</span><br><span class="line">        $sel;</span><br><span class="line">    function init ()&#123;</span><br><span class="line">        canvas = document.getElementById('cvs');</span><br><span class="line">        ctx = canvas.getContext('2d');</span><br><span class="line">        $save = document.getElementById('save');</span><br><span class="line">        $convert = document.getElementById('convert');</span><br><span class="line">        $sel = "png";</span><br><span class="line">        $imgs = document.getElementById('imgs');</span><br><span class="line">        $imgW = 1980;</span><br><span class="line">        $imgH = 2000;</span><br><span class="line">        bind();</span><br><span class="line">        draw();</span><br><span class="line">    &#125;</span><br><span class="line">    function bind () &#123;</span><br><span class="line">        <span class="selector-tag">canvas</span><span class="selector-class">.onmousedown</span> = function(e) &#123;</span><br><span class="line">            bMouseIsDown = true;</span><br><span class="line">            iLastX = e.clientX - canvas.offsetLeft + (window.pageXOffset||document.body.scrollLeft||document.documentElement.scrollLeft);</span><br><span class="line">            iLastY = e.clientY - canvas.offsetTop + (window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">canvas</span><span class="selector-class">.onmouseup</span> = function() &#123;</span><br><span class="line">            bMouseIsDown = false;</span><br><span class="line">            iLastX = -1;</span><br><span class="line">            iLastY = -1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">canvas</span><span class="selector-class">.onmousemove</span> = function(e) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bMouseIsDown) &#123;</span><br><span class="line">                var iX = e.clientX - canvas.offsetLeft + (window.pageXOffset||document.body.scrollLeft||document.documentElement.scrollLeft);</span><br><span class="line">                var iY = e.clientY - canvas.offsetTop + (window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop);</span><br><span class="line">                ctx.moveTo(iLastX, iLastY);</span><br><span class="line">                ctx.lineTo(iX, iY);</span><br><span class="line">                ctx.stroke();</span><br><span class="line">                iLastX = iX;</span><br><span class="line">                iLastY = iY;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="variable">$save</span><span class="selector-class">.onclick</span> = function (e) &#123;</span><br><span class="line">            <span class="selector-tag">var</span> type = <span class="variable">$sel</span><span class="selector-class">.value</span>,</span><br><span class="line">                w = <span class="variable">$imgW</span><span class="selector-class">.value</span>,</span><br><span class="line">                h = $imgH.value;</span><br><span class="line">            Canvas2Image.saveAsImage(canvas, w, h, type);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    onload = init;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre>      </td>    </tr>  </table></figure><p>本文链接: <a href="http://meng.uno/posts/f03eda59/">http://meng.uno/posts/f03eda59/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天心血来潮，突然想将我们组开发的网站上的“导出Excel”功能做一点拓展，于是就想能不能直接将网页表格导出为图片！&lt;br&gt; 在我的不懈搜索后（搜索过程中绝大部分博客上的博文要么相互抄袭要么没什么屁用），终于得到了“canvas2image.js”这个神奇的JavaScri
      
    
    </summary>
    
      <category term="软件工程" scheme="http://meng.uno/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="软件工程" scheme="http://meng.uno/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java导出Excel</title>
    <link href="http://meng.uno/posts/7725d215/"/>
    <id>http://meng.uno/posts/7725d215/</id>
    <published>2016-12-06T14:16:48.000Z</published>
    <updated>2018-02-09T10:46:20.923Z</updated>
    
    <content type="html"><![CDATA[<p>完成这个实验，你需要下载<code>jxl</code>jar包，具体方法自行百度。<br> 接下来我将直接使用具体代码进行讲解我的实现过程。  <br> 文件名：  <code>ExcelAction.java</code></p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre>      </td>      <td class="code">        <pre><span class="line">package net.kuangmeng.excel;</span><br><span class="line"><span class="comment">/*这里是所有需要导入的库，不用担心当你写好其他代码时，编辑器会提示或者自动帮你补全！*/</span></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line">import jxl.Workbook;</span><br><span class="line">import jxl.format.Alignment;</span><br><span class="line">import jxl.format.Colour;</span><br><span class="line">import jxl.format.UnderlineStyle;</span><br><span class="line">import jxl.format.VerticalAlignment;</span><br><span class="line">import jxl.write.Label;</span><br><span class="line">import jxl.write.WritableCellFormat;</span><br><span class="line">import jxl.write.WritableFont;</span><br><span class="line">import jxl.write.WritableSheet;</span><br><span class="line">import jxl.write.WritableWorkbook;</span><br><span class="line">import jxl.write.WriteException;</span><br><span class="line">import jxl.write.biff.RowsExceededException;</span><br><span class="line"></span><br><span class="line">@SuppressWarnings(<span class="string">"serial"</span>)</span><br><span class="line">public class ExcelAction extends ActionSupport&#123;</span><br><span class="line"> public static void main(String[] args) &#123;</span><br><span class="line">     <span class="comment">//主函数调用</span></span><br><span class="line">     <span class="comment">//listth为导出excel的表头信息</span></span><br><span class="line">     list&lt;String&gt; listth = new ArrayList&lt;String&gt;;</span><br><span class="line">     <span class="comment">//listtd为导出的excel表项</span></span><br><span class="line">        list&lt;String&gt; listtd = new ArrayList&lt;String&gt;;</span><br><span class="line">        <span class="comment">//num为表的列数</span></span><br><span class="line">        int num ;</span><br><span class="line">     exportExcel(tablename,listth,listtd,num);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//真正的导出excel方法</span></span><br><span class="line">public static void exportExcel(String fileName,List&lt;String&gt; listth,List&lt;String&gt; listtd,int num) &#123;</span><br><span class="line">    <span class="comment">//设置保存文件具体位置及文件名</span></span><br><span class="line"> String excelName ="C:\\Users\\meng\\Desktop\\"+fileName+".xls";</span><br><span class="line">  try &#123;  </span><br><span class="line">   File excelFile = new File(excelName);</span><br><span class="line">   <span class="comment">// 如果文件存在就删除它</span></span><br><span class="line">   <span class="keyword">if</span> (excelFile.exists())</span><br><span class="line">    excelFile.delete();</span><br><span class="line">   <span class="comment">// 打开文件</span></span><br><span class="line">   WritableWorkbook book = Workbook.createWorkbook(excelFile);</span><br><span class="line">   <span class="comment">// 生成名为“第一页”的工作表，参数0表示这是第一页</span></span><br><span class="line">   WritableSheet sheet = book.createSheet("Up2U导出表格 ", 0);</span><br><span class="line">   <span class="comment">// 文字样式</span></span><br><span class="line">   jxl<span class="selector-class">.write</span><span class="selector-class">.WritableFont</span> wfc = new jxl<span class="selector-class">.write</span><span class="selector-class">.WritableFont</span>(</span><br><span class="line">     WritableFont<span class="selector-class">.ARIAL</span>, <span class="number">10</span>, WritableFont<span class="selector-class">.NO_BOLD</span>, false,</span><br><span class="line">     UnderlineStyle.NO_UNDERLINE, jxl.format.Colour.BLACK);</span><br><span class="line">   jxl<span class="selector-class">.write</span><span class="selector-class">.WritableCellFormat</span> wcfFC = new jxl<span class="selector-class">.write</span><span class="selector-class">.WritableCellFormat</span>(</span><br><span class="line">     wfc);</span><br><span class="line">   jxl.write.WritableCellFormat wcfF = new jxl.write.WritableCellFormat(wfc);</span><br><span class="line">   wcfF.setBackground(jxl.format.Colour.BLACK);</span><br><span class="line">   <span class="comment">// 设置单元格样式</span></span><br><span class="line">   wcfFC.setBackground(jxl.format.Colour.GRAY_25);// 单元格颜色</span><br><span class="line">   wcfFC.setAlignment(jxl.format.Alignment.CENTRE);// 单元格居中</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 在Label对象的构造子中指名单元格位置是第一列第一行(0,0)</span></span><br><span class="line">   <span class="comment">// 以及单元格内容为</span></span><br><span class="line">   for(int i=0;i&lt;listth.size()/(num-2);i++)&#123;</span><br><span class="line">   for(int j=0;j&lt;num-2;j++)&#123;</span><br><span class="line">   sheet.addCell(new Label(j,i,listth.get(i*(num-2)+j),wcfFC));</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   for(int i=listth.size()/(num-2);i&lt;(listth.size()+listtd.size())/(num-2);i++)&#123;</span><br><span class="line">   for(int j=0;j&lt;num-2;j++)&#123;</span><br><span class="line">   sheet.addCell(new Label(j,i,listtd.get((i-1)*(num-2)+j),wcfF));</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">// 写入数据并关闭文件</span></span><br><span class="line">   book.write();</span><br><span class="line">   book.close();</span><br><span class="line">   System.out.println("Excel创建成功");</span><br><span class="line">  &#125; catch (Exception e) &#123;</span><br><span class="line">   System.out.println(e);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><p>本文链接: <a href="http://meng.uno/posts/7725d215/">http://meng.uno/posts/7725d215/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;完成这个实验，你需要下载&lt;code&gt;jxl&lt;/code&gt;jar包，具体方法自行百度。&lt;br&gt; 接下来我将直接使用具体代码进行讲解我的实现过程。
  &lt;br&gt; 文件名：
  &lt;code&gt;ExcelAction.java&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="软件工程" scheme="http://meng.uno/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="软件工程" scheme="http://meng.uno/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Mac MySQL无法启动解决方案</title>
    <link href="http://meng.uno/posts/115ed5e0/"/>
    <id>http://meng.uno/posts/115ed5e0/</id>
    <published>2016-12-06T13:24:05.000Z</published>
    <updated>2018-02-09T10:46:20.929Z</updated>
    
    <content type="html"><![CDATA[<p>正像这次博客的日期那样，《软工》大项目接近尾声了，然而直到今天我才真正解决了这个大难题——Mac MySQL无法使用！！！</p><p>检查MySQL是否成功安装</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">mysql --version</span><br></pre>      </td>    </tr>  </table></figure><p>关闭MySQL连接（即使没连也无妨）</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">sudo /usr/local/mysql/support-files/mysql<span class="selector-class">.server</span> stop</span><br></pre>      </td>    </tr>  </table></figure><p>登录管理员</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br></pre>      </td>      <td class="code">        <pre><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line">sudo su</span><br></pre>      </td>    </tr>  </table></figure><p>禁止MySQL验证来登录（此时不验证密码）</p><figure class="highlight stylus">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">./mysqld_safe --skip-grant-tables &amp;</span><br></pre>      </td>    </tr>  </table></figure><p>（此时应该成功进入<code>mysql&gt;</code>）设置密码</p><figure class="highlight">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">UPDATE mysql.user SET authentication_string=PASSWORD('*****') WHERE User='root';</span><br></pre>      </td>    </tr>  </table></figure><p>（若显示密码过期）设置密码永不过期</p><figure class="highlight">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">ALTER USER 'root'@'localhost' PASSWORD EXPIRE NEVER;</span><br></pre>      </td>    </tr>  </table></figure><p>刷新MySQL的系统权限</p><figure class="highlight">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br></pre>      </td>      <td class="code">        <pre><span class="line">flush privileges;</span><br></pre>      </td>    </tr>  </table></figure><p>至此应该来说MySQL应该好使了。</p><p>本文链接: <a href="http://meng.uno/posts/115ed5e0/">http://meng.uno/posts/115ed5e0/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;正像这次博客的日期那样，《软工》大项目接近尾声了，然而直到今天我才真正解决了这个大难题——Mac MySQL无法使用！！！&lt;/p&gt;
&lt;p&gt;检查MySQL是否成功安装&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;
  &lt;table&gt;
    &lt;t
      
    
    </summary>
    
      <category term="软件工程" scheme="http://meng.uno/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="软件工程" scheme="http://meng.uno/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java发送邮件</title>
    <link href="http://meng.uno/posts/21f3b9c2/"/>
    <id>http://meng.uno/posts/21f3b9c2/</id>
    <published>2016-12-04T14:30:34.000Z</published>
    <updated>2018-02-09T10:46:20.925Z</updated>
    
    <content type="html"><![CDATA[<p>我觉得学会Java mail是一件很自豪的事，怎么说呢，邮箱这么有逼格的东西都能被你玩的很溜的话，一定不一般。<br> 本次试验使用了  <code>javax.mail.jar</code>jar包，请自行百度下载。<br> 我实现的Java mail主要包括4个部分：</p><ol>  <li>发送邮件使用的基本信息</li>  <li>邮件发送器</li>  <li>发件人设置</li>  <li>实际发送</li></ol><p>四个部分组成。</p><h2 id="发送邮件使用的基本信息"><a class="header-anchor" href="#发送邮件使用的基本信息">🌊</a>发送邮件使用的基本信息</h2><p>文件名：<code>MailSenderInfo.java</code><br> 代码如下，我仍然以备注的形式讲解：</p><figure class="highlight java">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="keyword">package</span> net.kuangmeng.mail; </span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment">* 发送邮件需要使用的基本信息  </span></span><br><span class="line"><span class="comment">*/</span>   </span><br><span class="line"><span class="keyword">import</span> java.util.Properties;   </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailSenderInfo</span> </span>&#123;   </span><br><span class="line">    <span class="comment">// 发送邮件的服务器的IP和端口   </span></span><br><span class="line">    <span class="keyword">private</span> String mailServerHost;   </span><br><span class="line">    <span class="keyword">private</span> String mailServerPort = <span class="string">"25"</span>;   </span><br><span class="line">    <span class="comment">// 邮件发送者的地址   </span></span><br><span class="line">    <span class="keyword">private</span> String fromAddress;   </span><br><span class="line">    <span class="comment">// 邮件接收者的地址   </span></span><br><span class="line">    <span class="keyword">private</span> String toAddress;   </span><br><span class="line">    <span class="comment">// 登陆邮件发送服务器的用户名和密码   </span></span><br><span class="line">    <span class="keyword">private</span> String userName;   </span><br><span class="line">    <span class="keyword">private</span> String password;   </span><br><span class="line">    <span class="comment">// 是否需要身份验证   </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> validate = <span class="keyword">false</span>;   </span><br><span class="line">    <span class="comment">// 邮件主题   </span></span><br><span class="line">    <span class="keyword">private</span> String subject;   </span><br><span class="line">    <span class="comment">// 邮件的文本内容   </span></span><br><span class="line">    <span class="keyword">private</span> String content;   </span><br><span class="line">    <span class="comment">// 邮件附件的文件名   </span></span><br><span class="line">    <span class="keyword">private</span> String[] attachFileNames;     </span><br><span class="line">    <span class="comment">/**  </span></span><br><span class="line"><span class="comment">      * 获得邮件会话属性  </span></span><br><span class="line"><span class="comment">      */</span>   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Properties <span class="title">getProperties</span><span class="params">()</span></span>&#123;   </span><br><span class="line">      Properties p = <span class="keyword">new</span> Properties();   </span><br><span class="line">      p.put(<span class="string">"mail.smtp.host"</span>, <span class="keyword">this</span>.mailServerHost);   </span><br><span class="line">      p.put(<span class="string">"mail.smtp.port"</span>, <span class="keyword">this</span>.mailServerPort);   </span><br><span class="line">      p.put(<span class="string">"mail.smtp.auth"</span>, validate ? <span class="string">"true"</span> : <span class="string">"false"</span>);   </span><br><span class="line">      <span class="keyword">return</span> p;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMailServerHost</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> mailServerHost;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMailServerHost</span><span class="params">(String mailServerHost)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.mailServerHost = mailServerHost;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMailServerPort</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> mailServerPort;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMailServerPort</span><span class="params">(String mailServerPort)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.mailServerPort = mailServerPort;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValidate</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> validate;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValidate</span><span class="params">(<span class="keyword">boolean</span> validate)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.validate = validate;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">public</span> String[] getAttachFileNames() &#123;   </span><br><span class="line">      <span class="keyword">return</span> attachFileNames;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAttachFileNames</span><span class="params">(String[] fileNames)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.attachFileNames = fileNames;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFromAddress</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> fromAddress;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFromAddress</span><span class="params">(String fromAddress)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.fromAddress = fromAddress;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> password;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.password = password;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getToAddress</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> toAddress;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setToAddress</span><span class="params">(String toAddress)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.toAddress = toAddress;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> userName;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.userName = userName;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSubject</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> subject;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSubject</span><span class="params">(String subject)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.subject = subject;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">return</span> content;   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String textContent)</span> </span>&#123;   </span><br><span class="line">      <span class="keyword">this</span>.content = textContent;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="邮件发送器"><a class="header-anchor" href="#邮件发送器">🌊</a>邮件发送器</h2><p>文件名：<code>SimpleMailSender.java</code></p><figure class="highlight java">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="keyword">package</span> net.kuangmeng.mail;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;   </span><br><span class="line"><span class="keyword">import</span> java.util.Properties;  </span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.BodyPart;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.Multipart;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;   </span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;   </span><br><span class="line">  </span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment">* 简单邮件（不带附件的邮件）发送器  </span></span><br><span class="line"><span class="comment">*/</span>   </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleMailSender</span>  </span>&#123;   </span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment">  * 以文本格式发送邮件  </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> mailInfo 待发送的邮件的信息  </span></span><br><span class="line"><span class="comment">  */</span>   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sendTextMail</span><span class="params">(MailSenderInfo mailInfo)</span> </span>&#123;   </span><br><span class="line">      <span class="comment">// 判断是否需要身份认证   </span></span><br><span class="line">      MyAuthenticator authenticator = <span class="keyword">null</span>;   </span><br><span class="line">      Properties pro = mailInfo.getProperties();  </span><br><span class="line">      <span class="keyword">if</span> (mailInfo.isValidate()) &#123;   </span><br><span class="line">      <span class="comment">// 如果需要身份认证，则创建一个密码验证器   </span></span><br><span class="line">        authenticator = <span class="keyword">new</span> MyAuthenticator(mailInfo.getUserName(), mailInfo.getPassword());   </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="comment">// 根据邮件会话属性和密码验证器构造一个发送邮件的session   </span></span><br><span class="line">      Session sendMailSession = Session.getDefaultInstance(pro,authenticator);   </span><br><span class="line">      <span class="keyword">try</span> &#123;   </span><br><span class="line">      <span class="comment">// 根据session创建一个邮件消息   </span></span><br><span class="line">      Message mailMessage = <span class="keyword">new</span> MimeMessage(sendMailSession);   </span><br><span class="line">      <span class="comment">// 创建邮件发送者地址   </span></span><br><span class="line">      Address from = <span class="keyword">new</span> InternetAddress(mailInfo.getFromAddress());   </span><br><span class="line">      <span class="comment">// 设置邮件消息的发送者   </span></span><br><span class="line">      mailMessage.setFrom(from);   </span><br><span class="line">      <span class="comment">// 创建邮件的接收者地址，并设置到邮件消息中   </span></span><br><span class="line">      Address to = <span class="keyword">new</span> InternetAddress(mailInfo.getToAddress());   </span><br><span class="line">      mailMessage.setRecipient(Message.RecipientType.TO,to);   </span><br><span class="line">      <span class="comment">// 设置邮件消息的主题   </span></span><br><span class="line">      mailMessage.setSubject(mailInfo.getSubject());   </span><br><span class="line">      <span class="comment">// 设置邮件消息发送的时间   </span></span><br><span class="line">      mailMessage.setSentDate(<span class="keyword">new</span> Date());   </span><br><span class="line">      <span class="comment">// 设置邮件消息的主要内容   </span></span><br><span class="line">      String mailContent = mailInfo.getContent();   </span><br><span class="line">      mailMessage.setText(mailContent);   </span><br><span class="line">      <span class="comment">// 发送邮件   </span></span><br><span class="line">      Transport.send(mailMessage);  </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;   </span><br><span class="line">      &#125; <span class="keyword">catch</span> (MessagingException ex) &#123;   </span><br><span class="line">          ex.printStackTrace();   </span><br><span class="line">      &#125;   </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="comment">/**  </span></span><br><span class="line"><span class="comment">      * 以HTML格式发送邮件  </span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> mailInfo 待发送的邮件信息  </span></span><br><span class="line"><span class="comment">      */</span>   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">sendHtmlMail</span><span class="params">(MailSenderInfo mailInfo)</span></span>&#123;   </span><br><span class="line">      <span class="comment">// 判断是否需要身份认证   </span></span><br><span class="line">      MyAuthenticator authenticator = <span class="keyword">null</span>;  </span><br><span class="line">      Properties pro = mailInfo.getProperties();  </span><br><span class="line">      <span class="comment">//如果需要身份认证，则创建一个密码验证器    </span></span><br><span class="line">      <span class="keyword">if</span> (mailInfo.isValidate()) &#123;   </span><br><span class="line">        authenticator = <span class="keyword">new</span> MyAuthenticator(mailInfo.getUserName(), mailInfo.getPassword());  </span><br><span class="line">      &#125;   </span><br><span class="line">      <span class="comment">// 根据邮件会话属性和密码验证器构造一个发送邮件的session   </span></span><br><span class="line">      Session sendMailSession = Session.getDefaultInstance(pro,authenticator);   </span><br><span class="line">      <span class="keyword">try</span> &#123;   </span><br><span class="line">      <span class="comment">// 根据session创建一个邮件消息   </span></span><br><span class="line">      Message mailMessage = <span class="keyword">new</span> MimeMessage(sendMailSession);   </span><br><span class="line">      <span class="comment">// 创建邮件发送者地址   </span></span><br><span class="line">      Address from = <span class="keyword">new</span> InternetAddress(mailInfo.getFromAddress());   </span><br><span class="line">      <span class="comment">// 设置邮件消息的发送者   </span></span><br><span class="line">      mailMessage.setFrom(from);   </span><br><span class="line">      <span class="comment">// 创建邮件的接收者地址，并设置到邮件消息中   </span></span><br><span class="line">      Address to = <span class="keyword">new</span> InternetAddress(mailInfo.getToAddress());   </span><br><span class="line">      <span class="comment">// Message.RecipientType.TO属性表示接收者的类型为TO   </span></span><br><span class="line">      mailMessage.setRecipient(Message.RecipientType.TO,to);   </span><br><span class="line">      <span class="comment">// 设置邮件消息的主题   </span></span><br><span class="line">      mailMessage.setSubject(mailInfo.getSubject());   </span><br><span class="line">      <span class="comment">// 设置邮件消息发送的时间   </span></span><br><span class="line">      mailMessage.setSentDate(<span class="keyword">new</span> Date());   </span><br><span class="line">      <span class="comment">// MiniMultipart类是一个容器类，包含MimeBodyPart类型的对象   </span></span><br><span class="line">      Multipart mainPart = <span class="keyword">new</span> MimeMultipart();   </span><br><span class="line">      <span class="comment">// 创建一个包含HTML内容的MimeBodyPart   </span></span><br><span class="line">      BodyPart html = <span class="keyword">new</span> MimeBodyPart();   </span><br><span class="line">      <span class="comment">// 设置HTML内容   </span></span><br><span class="line">      html.setContent(mailInfo.getContent(), <span class="string">"text/html; charset=utf-8"</span>);   </span><br><span class="line">      mainPart.addBodyPart(html);   </span><br><span class="line">      <span class="comment">// 将MiniMultipart对象设置为邮件内容   </span></span><br><span class="line">      mailMessage.setContent(mainPart);   </span><br><span class="line">      <span class="comment">// 发送邮件   </span></span><br><span class="line">      Transport.send(mailMessage);   </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;   </span><br><span class="line">      &#125; <span class="keyword">catch</span> (MessagingException ex) &#123;   </span><br><span class="line">          ex.printStackTrace();   </span><br><span class="line">      &#125;   </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="发件人设置"><a class="header-anchor" href="#发件人设置">🌊</a>发件人设置</h2><p>文件名：<code>MyAuthenticator.java</code></p><figure class="highlight java">  <table>    <tr>      <td class="gutter">        <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre>      </td>      <td class="code">        <pre><span class="line"><span class="keyword">package</span> net.kuangmeng.mail;</span><br><span class="line"><span class="keyword">import</span> javax.mail.*;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAuthenticator</span> <span class="keyword">extends</span> <span class="title">Authenticator</span></span>&#123;  </span><br><span class="line">    String userName=<span class="keyword">null</span>;  </span><br><span class="line">    String password=<span class="keyword">null</span>;  </span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyAuthenticator</span><span class="params">()</span></span>&#123;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyAuthenticator</span><span class="params">(String username, String password)</span> </span>&#123;   </span><br><span class="line">        <span class="keyword">this</span>.userName = username;   </span><br><span class="line">        <span class="keyword">this</span>.password = password;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(userName, password);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre>      </td>    </tr>  </table></figure><h2 id="实际发送"><a class="header-anchor" href="#实际发送">🌊</a>实际发送</h2><p>文件名：<code>MailAction.java</code></p><pre><code class="language-java">package net.kuangmeng.mail;import net.kuangmeng.*;public class MailAction {@SuppressWarnings(&quot;static-access&quot;)public static void main(String[] args){          //这个类主要是设置邮件       MailSenderInfo mailInfo = new MailSenderInfo();        mailInfo.setMailServerHost(&quot;smtp.yeah.net&quot;);        mailInfo.setMailServerPort(&quot;25&quot;);        mailInfo.setValidate(true);        mailInfo.setUserName(&quot;*****@yeah.net&quot;);        mailInfo.setPassword(&quot;******&quot;);//您的邮箱密码        mailInfo.setFromAddress(&quot;*****@yeah.net&quot;);        mailInfo.setToAddress(&quot;****@qq.com&quot;);        mailInfo.setSubject(&quot;你好！&quot;);//邮件主题       mailInfo.setContent(&quot;这是一个测试&quot;);//邮件内容        //这个类主要来发送邮件        SimpleMailSender sms = new SimpleMailSender();        sms.sendTextMail(mailInfo);//发送文体格式         sms.sendHtmlMail(mailInfo);//发送html格式    }}</code></pre><p>本文链接: <a href="http://meng.uno/posts/21f3b9c2/">http://meng.uno/posts/21f3b9c2/</a> 欢迎转载！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我觉得学会Java mail是一件很自豪的事，怎么说呢，邮箱这么有逼格的东西都能被你玩的很溜的话，一定不一般。&lt;br&gt; 本次试验使用了
  &lt;code&gt;javax.mail.jar&lt;/code&gt;jar包，请自行百度下载。&lt;br&gt; 我实现的Java mail主要包括4个部分：
      
    
    </summary>
    
      <category term="软件工程" scheme="http://meng.uno/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="软件工程" scheme="http://meng.uno/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
</feed>
